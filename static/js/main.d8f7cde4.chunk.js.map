{"version":3,"sources":["events/extensions.js","events/lib/event.ts","events/lib/Logger.ts","events/lib/process.ts","events/lib/watcher.ts","events/lib/helper.ts","events/index.js","events/lib/index.ts","components/Modal.js","config.js","events/contracts/constants.js","events/contracts/transaction.js","events/contracts/farmTransaction.js","events/contracts/price.js","events/contracts/apy.js","events/contracts/accounts.js","events/pageDelegate.js","Routes.js","reportWebVitals.js","index.js","utils/number.js","utils/check.js","utils/util.js","utils/constants.js","utils/alert.js"],"names":["Event","_eventMap","_id","this","Map","name","callback","ctx","createEvent","once","events","get","_removeEventByFn","delete","args","forEach","event","id","apply","_removeEventById","options","eventId","push","set","i","length","splice","callNative","bool","message","error","level","console","Process","_options","processors","_processArgsQueue","key","handler","debug","Logger","info","task","pop","invoke","processor","Watcher","watchers","__notifyTimes","call","data","handlerId","watcher","unWatch","_unWatchAll","noticeHandler","_unWatch","clear","undefined","handlerObj","mapData","keys","ctxBind","_$unmapFns","Array","isArray","watch","val","Object","unmapActions","unmapFn","ranta","_extensionData","_watchers","process","query","init","_initOptions","_initWatchData","_initProxyData","page","extensions","reduce","current","values","Proxy","target","propKey","value","receiver","oldValue","notify","Reflect","warn","web3","chainProvider","chainAccount","chainBalance","showLoading","loadingMessage","theme","BumperZapContract","BTokenContract","LpContract","approveMap","approveLpMap","colAmtMap","pairedAmt","bumperAmt","btcbBTokenAmt","ethBTokenAmt","swapLpAmtMap","stakeLpAmtMap","rewardMap","poolSupplyMap","poolStakedMap","btcbPrice","ethPrice","bcPriceMap","bumperPrice","lpApyMap","lendApyMap","borrowApyMap","getCtx","showConfirm","title","content","onOk","Modal","confirm","icon","onCancel","log","getContainer","document","getElementById","showInfo","Config","BaseApi","scanUrl","whitepaperLink","githubLink","twitterLink","mediumLink","telegramLink","docLink","NETWORK","swapUrl","COL_ADDRESS","LP_ADDRESS","BTOKEN_ADDRESS","CONTRACT_ADDRESS","PRICE_ADDRESS","REWARD_PER_DAY","EXPIRY_MAP","paired","MARKET_POOL_LIST","col","logo","logoPaired","expiryText","mintRatioText","expiry","mintRatio","FARM_POOL_LIST","ETH_NETWORK","1","2","3","4","42","97","PAIRED","BumperCore","BumperZap","SwapRouter","getErc20Json","a","fetch","result","json","getBumperCoreJson","getBumperZapJson","getBTokenJson","getBumperFarmJson","getRouterJson","getLpJson","initContract","TruffleContract","window","erc20","Erc20Contract","setProvider","bTokenJSON","BumperCoreJSON","BumperCoreContract","BumperZapJSON","BumperFarmJSON","BumperFarmContract","routerJSON","SwapRouterContract","lpJson","getColAmount","address","map","at","btcbIns","balanceOf","res","amount","convertByWei","getPairedAmount","getBTokenAmount","brIns","brAmt","bcIns","bcAmt","isApproveCol","colIns","allowance","approveNum","isApprovePaired","pairedIns","approveCol","contractAddress","colAddress","approve","convertByEth","from","alertSuccess","alertError","emit","approvePaired","pairedAddress","depositAndSwapToPaired","num","ext","e","m","zapInstance","params","lend","swapInstance","swapExactTokensForTokens","deposit","coreInstance","mmDeposit","repay","redeem","collect","BumperFarm","BUMPER","getBumperAmount","instance","getSwapLpAmount","getStakeLpAmount","getUser","stakeLp","reward","assign","map2","getLpTotalStaked","totalSupply","getLpTotalReserves","getReserves","amount0","_reserve0","amount1","_reserve1","toFixed","isApproveLP","lpIns","approveLP","stake","farmIns","withdraw","claim","claimRewardsForPools","BTCB2WBNB","BTCB_BC2WBNB","ETH_BC2WBNB","WBNB2BUMPER","WBNB2ETH","getBtcbPrice","Math","round","getBcTokenPrice","price","getEthPrice","getBumperPrice","getLpApy","lpTotalTmp","bcPrice","RewardValue","lpValue","apy","getLendApy","expiryDate","floor","Date","getTime","now","interest","duration","getBorrowApy","crt_net","initChain","then","default","detectEthereumProvider","provider","ethereum","request","method","network","Web3","location","href","initTheme","defaultTheme","getDefaultTheme","updateAccount","account","Promise","all","resolve","updateAccountFarm","updateSupply","updatePrice","updateApy","listen","code","isNeedApprove","approvedNumAdd","receipt","status","Header","React","lazy","Footer","Markets","Farms","Home","Loading","App","useState","setTheme","useEffect","lifetimeObj","className","exact","path","Empty","RoutePage","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Routes","ETH_TO_WEI","BigInt","pow","wei","bigWei","Number","eth","checkOpValid","alert","hour","getHours","symbol","type","statusKey","approvedKey","flag","add1","add2","num1","num2","FARM_TABLE_HEADER","MARKET_TABLE_HEADER","msg","style","marginTop","success"],"mappings":"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","file":"static/js/main.d8f7cde4.chunk.js","sourcesContent":["import ctx from \"./index\";\n\nexport default [\n  {\n    name: 'default',\n    data: {\n      // web3连接器\n      web3: 1,\n      // eth连接器\n      chainProvider: 1,\n      // 用户账户\n      chainAccount: 1,\n      // 账户余额\n      chainBalance: 1,\n      // 是否loading\n      showLoading: 1,\n      // loading展示文案\n      loadingMessage: 1,\n      // 换肤\n      theme: 'dark', // 1 light，0 dark\n    }\n  },\n  {\n    name: 'contract',\n    data: {\n      // zap合约\n      BumperZapContract: 1,\n      // btoken合约\n      BTokenContract: 1,\n      LpContract: 1,\n      // approve\n      approveMap: 1,\n      //是否授权\n      approveLpMap: 1,\n    }\n  },\n  {\n    name: 'assets',\n    data: {\n      colAmtMap: {}, // col\n      pairedAmt: 1, // paired\n      bumperAmt: 1, // bumper\n      btcbBTokenAmt: 1, // btoken\n      ethBTokenAmt: 1, // btoken\n      swapLpAmtMap: {}, // swap lp，可用的lp\n      stakeLpAmtMap: {}, // stake lp，可以生成reward的\n      rewardMap: {}, // 可提取的奖励\n    }\n  },\n  {\n    name: 'poolTotal',\n    data: {\n      poolSupplyMap: {}, // pool supply, [bctoken, paired]\n      poolStakedMap: {} // pool staked, lp的stake量\n    }\n  },\n  {\n    name: 'prices',\n    data: {\n      btcbPrice: 1,\n      ethPrice: 1,\n      bcPriceMap: {},\n      bumperPrice: 1,\n    }\n  },\n  {\n    name: 'apy',\n    data: {\n      lpApyMap: 1,\n      lendApyMap: {},\n      borrowApyMap: {}\n    }\n  },\n];\n","import { IContext } from './types';\n\ninterface IEvent {\n  // 事件编号\n  id: number;\n  // 是否只执行一次\n  once: boolean;\n  ctx: IContext;\n  callback: Function;\n}\n\nclass Event {\n  private _eventMap: Map<string, IEvent[]>;\n  private _id: number;\n\n  constructor() {\n    this._eventMap = new Map();\n    this._id = 0;\n  }\n\n  /**\n   * 添加事件监听\n   * @param {string} name 事件名称\n   * @param {function} callback 事件回调\n   * @param {this} ctx 回调函数调用上下文\n   * @returns {function} 取消事件监听函数\n   */\n\n  listen(name: string, callback: Function, ctx?: IContext) {\n    return this.createEvent(\n      {\n        name,\n        callback,\n        once: false,\n      },\n      ctx,\n    );\n  }\n\n  /**\n   * 删除事件监听\n   * @param {string} name 事件名称\n   * @param {function} callback 监听的事件回调引用\n   */\n  remove(name: string, callback?: Function) {\n    if (!callback) {\n      this._eventMap.delete(name);\n    } else {\n      const events = this._eventMap.get(name);\n      if (events) {\n        this._removeEventByFn(events, callback);\n      }\n    }\n  }\n\n  /**\n   * 添加一次性事件监听\n   * @param {string} name 事件名称\n   * @param {function} callback 事件回调\n   * @param {this} ctx 回调函数调用上下文\n   * @returns {function} 取消事件监听函数\n   */\n  once(name: string, callback: Function, ctx?: IContext) {\n    return this.createEvent(\n      {\n        name,\n        callback,\n        once: true,\n      },\n      ctx,\n    );\n  }\n\n  /**\n   * 派发事件\n   *\n   * @param {string} name 事件名称\n   * @param  {any[]} args 其他参数\n   */\n  emit(name: string, ...args: any[]) {\n    const events = this._eventMap.get(name);\n\n    if (!events) {\n      return this;\n    }\n\n    events.forEach((event: IEvent) => {\n      const { id, callback, once, ctx } = event;\n      callback && callback.apply(ctx, args);\n      if (once) {\n        this._removeEventById(events, id);\n      }\n    });\n\n    return this;\n  }\n\n  createEvent(options: { name: string; callback: Function; once?: boolean }, ctx?: IContext) {\n    const { name, callback, once } = options;\n    const events = this._eventMap.get(name) || [];\n    const eventId = ++this._id;\n\n    events.push({\n      id: eventId,\n      once,\n      callback,\n      ctx,\n    } as IEvent);\n\n    this._eventMap.set(name, events);\n\n    // 返回一个函数，可以移除该事件\n    return () => {\n      /* istanbul ignore else */\n      if (events) {\n        this._removeEventById(events, eventId);\n      }\n    };\n  }\n\n  _removeEventById(events: IEvent[], id: number) {\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      if (item.id === id) {\n        events.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  _removeEventByFn(events: IEvent[], callback: Function) {\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      if (item.callback === callback) {\n        events.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\nexport default Event;\n","type ILogLevel = 'info' | 'warn' | 'error';\n\nclass Logger {\n  info(...args: any[]) {\n    this.callNative('info', args);\n  }\n\n  warn(...args: any[]) {\n    this.callNative('warn', args);\n  }\n\n  /* istanbul ignore next */\n  error(...args: any[]) {\n    this.callNative('error', args);\n  }\n\n  /* istanbul ignore next */\n  assert(bool: boolean, message: any) {\n    if (bool) {\n      this.error(message);\n    }\n  }\n\n  callNative(level: ILogLevel, ...args: any[]) {\n    console[level](...args);\n  }\n}\n\nexport default new Logger();\n","import { IInnerOptions, IPureObject } from './types';\nimport Logger from './Logger';\n\ninterface IProcessor {\n  key: string;\n  handler: Function;\n}\n\ninterface IProcessorArgsQueue {\n  [key: string]: { args: any[] }[];\n}\n\nclass Process {\n  private _options: IInnerOptions;\n\n  processors: Map<string, IProcessor>;\n\n  // 未定义process，可以把参数存入任务队列\n  private _processArgsQueue: IProcessorArgsQueue;\n\n  constructor(options: IInnerOptions = {}) {\n    this.processors = new Map();\n    this._options = options;\n    this._processArgsQueue = {};\n  }\n\n  /**\n   * 定义事件\n   * @param {string} key 事件名称\n   * @param {Function} handler 调用事件执行的函数\n   */\n\n  define(key: string, handler: Function) {\n    if (!key || !handler || !handler.apply) {\n      /* istanbul ignore next */\n      if (this._options.debug) {\n        Logger.info(`ranta-adapter: process: 缺少 key 或者 handler`);\n      }\n      return;\n    }\n\n    const processor = this.processors.get(key);\n\n    if (processor) {\n      /* istanbul ignore next */\n      if (this._options.debug) {\n        Logger.info(`ranta-adapter: process: ${key} 已经被定义，请勿重复定义`);\n      }\n      return;\n    }\n\n    this.processors.set(key, {\n      key,\n      handler,\n    });\n\n    /**\n     * 补发未响应的 process invoke\n     */\n    if (this._processArgsQueue[key]) {\n      while (this._processArgsQueue[key].length > 0) {\n        const task = this._processArgsQueue[key].pop();\n        task && this.invoke(key, ...task.args);\n      }\n      delete this._processArgsQueue[key];\n    }\n  }\n\n  /**\n   * 执行事件，获取值\n   * @param {string} key 事件名称\n   * @param  {any[]} args 多个参数\n   */\n  invoke(key: string, ...args: any[]) {\n    const processor = this.processors.get(key);\n\n    if (!processor) {\n      if (!this._processArgsQueue[key]) {\n        this._processArgsQueue[key] = [];\n      }\n      this._processArgsQueue[key].push({ args });\n      return;\n    }\n\n    return processor.handler.apply(null, args);\n  }\n}\n\nexport default Process;\n","import { IContext } from './types';\nimport Logger from './Logger';\n\ntype INotifyTimes = {\n  [key in string | number]: number;\n};\n\ninterface INoticeHandler {\n  id: number;\n  handler: Function;\n}\n\ninterface IWatcher {\n  key: string | number;\n  unWatch: Function;\n  noticeHandler: Map<number, INoticeHandler>;\n}\n\nclass Watcher {\n  watchers: Map<string | number, IWatcher>;\n  private __notifyTimes: INotifyTimes;\n  private _id: number;\n\n  constructor() {\n    this.watchers = new Map();\n    this.__notifyTimes = {};\n    this._id = 0;\n  }\n  /**\n   * @param {string} key 监听字段名\n   * @param {function} callback 监听回调函数\n   * @param {this} context\n   * @returns {function} 取消监听函数\n   */\n\n  watch(key: string | number, callback: Function, ctx: IContext) {\n    if (!key || !callback) {\n      Logger.info('ranta-adapter: watch: 缺少 watch name 或者 回调函数 callback');\n      return;\n    }\n\n    // watch的时候，值已经被设置过\n    if (this.__notifyTimes[key] > 0) {\n      callback.call(ctx, ctx.data[key]);\n    }\n\n    const handlerId = ++this._id;\n\n    // 已经有人watch过了\n    const watcher = this.watchers.get(key) || {\n      key,\n      unWatch: /* istanbul ignore next */ () => {\n        this._unWatchAll(key);\n      },\n      noticeHandler: new Map(),\n    };\n    watcher.noticeHandler.set(handlerId, {\n      id: handlerId,\n      handler: callback,\n    });\n    this.watchers.set(key, watcher);\n    return this._unWatch(key, handlerId);\n  }\n\n  /* istanbul ignore next */\n  unWatch(key: string | number) {\n    this._unWatchAll(key);\n  }\n\n  _unWatch(key: string | number, id: number) {\n    return () => {\n      const watcher = this.watchers.get(key);\n      /* istanbul ignore else */\n      if (watcher) {\n        watcher.noticeHandler.delete(id);\n      }\n    };\n  }\n\n  // 中台化没有改方法\n  /* istanbul ignore next */\n  _unWatchAll(key: string | number) {\n    const watcher = this.watchers.get(key);\n    if (watcher) {\n      watcher.noticeHandler.clear();\n      watcher.unWatch = () => {};\n      this.watchers.set(key, watcher);\n    }\n    this.watchers.delete(key);\n  }\n\n  notify(key: string | number, args: any[], ctx: IContext) {\n    // 标记数据已被执行次数\n    if (this.__notifyTimes[key] === undefined) {\n      this.__notifyTimes[key] = 1;\n    } else {\n      this.__notifyTimes[key] += 1;\n    }\n    const watcher = this.watchers.get(key);\n    if (!watcher) {\n      return;\n    }\n    watcher.noticeHandler.forEach((handlerObj) => {\n      const { handler } = handlerObj;\n      handler.apply(ctx, args);\n    });\n  }\n}\n\nexport default Watcher;\n","/* eslint-disable @typescript-eslint/no-redeclare */\n/**\n * 辅助语法糖方法\n * 帮助减小包体积\n */\n\nimport { IContext } from './types';\n\ninterface IDefConfig {\n  [key: string]: Function;\n}\n\ninterface IProcessHelperConfig {\n  interrupt?: boolean;\n}\n\n/**\n * @function mapData\n * @description 减写中台化ctx.watch([key], callback)\n * @param keys\n * @param ctx 执行对象\n * @param ctxBind 映射对象，挂载注销方法\n * @example\n * mapData(['a'], ctx, ctxBind) =>\n * ctx.watch('a', (val) => { ctxBind.a = val; })\n * mapData({a: fn}, ctx, ctxBind); unmapActions(ctxBind); =>\n * const rm = ctx.watch('a', (val) => { ctxBind.a = fn(val); }); rm();\n */\nexport const mapData = (keys: string[] | IDefConfig, ctx: IContext, ctxBind: any) => {\n  if (!keys) {\n    return [];\n  }\n  if (!ctxBind._$unmapFns) {\n    ctxBind._$unmapFns = [] as Function[];\n  }\n  if (Array.isArray(keys)) {\n    keys.forEach((key) => {\n      // ctxBind为外部上下文\n      ctxBind._$unmapFns.push(\n        ctx.watch(key, (val: any) => {\n          ctxBind[key] = val;\n        }),\n      );\n    });\n  } else {\n    Object.keys(keys).forEach((key) => {\n      ctxBind._$unmapFns.push(\n        ctx.watch(key, (val: any) => {\n          ctxBind[key] = keys[key](val);\n        }),\n      );\n    });\n  }\n  return ctxBind._$unmapFns;\n};\n\n/**\n * @function mapEvent\n * @description 减写中台化ctx.event.listen([key], callback)\n * @param options\n * @param ctx\n * @param ctxBind 映射对象，挂载注销方法\n * @example\n * mapEvent({a: fn}, ctx, ctxBind); unmapActions(ctxBind) =>\n * const rm = ctx.event.listen('a', fn); rm();\n * \n */\nexport const mapEvent = (options: IDefConfig, ctx: IContext, ctxBind: any) => {\n  if (!ctxBind._$unmapFns) {\n    ctxBind._$unmapFns = [] as Function[];\n  }\n  Object.keys(options).forEach((key) => {\n    const fn = options[key];\n    if (fn instanceof Function) {\n      ctx.event.listen(key, fn);\n      ctxBind._$unmapFns.push(\n        () => {\n          ctx.event.remove(key, fn);\n        },\n      );\n    }\n  });\n  return ctxBind._$unmapFns;\n};\n\n/**\n * @function mapProcess\n * @description 减写中台化ctx.event.define([key], callback)\n * @param options\n * @param ctx\n * @param ctxBind 映射对象，挂载注销方法\n * @example\n * mapProcess({a: fn}, ctx, ctxBind); =>\n * ctx.process.define('a', fn);\n * \n */\nexport const mapProcess = (options: IDefConfig, ctx: IContext) => {\n  Object.keys(options).forEach((key) => {\n    const fn = options[key];\n    if (fn instanceof Function) {\n      ctx.process.define(key, fn);\n    }\n  });\n};\n\n/**\n * @function runProcess\n * @description 依次串行执行数组中的process，并使用promise连接\n * @param options\n * @param ctx\n * @param ctxBind 映射对象，挂载注销方法\n * @returns stopFn 中断函数，终止process串执行\n * @example\n * runProcess(['a', 'b'], ctx, stop); =>\n * ctx.process.invoke('a').then((val) => { ctx.process.invoke('b', val); })\n * stop.interrupt = true; // 中断流程\n */\nexport const runProcess = (keys: string[], ctx: IContext, options: IProcessHelperConfig = {}) => {\n  let promise = Promise.resolve();\n  keys.forEach((key: string) => {\n    promise = promise.then((val: any) => {\n      if (options && options.interrupt) {\n        return Promise.reject('process manually interrupted');\n      }\n      const result = ctx.process.invoke(key, val);\n      if (result instanceof Promise) {\n        return result;\n      }\n      return Promise.resolve(result);\n    })\n  });\n  return promise;\n}\n\n/**\n * @function unmapActions\n * @description 减写中台化ctx.watch ctx.event.listen 的垃圾回收\n * @param ctxBind mapData/mapListener所绑定的对象/adapter映射对象\n * @example\n * unmapActions(ctxBind)\n */\nexport const unmapActions = (ctxBind: any) => {\n  if (!ctxBind || !ctxBind._$unmapFns) {\n    return;\n  }\n  while (ctxBind._$unmapFns.length > 0) {\n    const unmapFn = ctxBind._$unmapFns.pop();\n    unmapFn && unmapFn();\n  }\n};\n","import extensions from './extensions';\nimport RantaAdapter from './lib';\n\nconst ranta = new RantaAdapter({\n  debug: true,\n  extensions\n});\n\nexport default ranta.getCtx();\n\nexport * from './lib/helper';\n","import { IContext, IExtension, IPureObject, IOptions, IWatcherIns } from './types';\nimport Event from './event';\nimport Process from './process';\nimport Watcher from './watcher';\nimport Logger from './Logger';\n\ninterface IAdapterOptions {\n  debug?: boolean;\n  extensions: IExtension[];\n}\n\nexport default class RantaAdapter {\n  _options!: IOptions;\n\n  private _extensionData!: IPureObject;\n\n  private _watchers!: IWatcherIns;\n\n  ctx: IContext;\n\n  constructor(options: IAdapterOptions) {\n    // 初始化\n    this.ctx = {\n      data: {},\n      event: new Event(),\n      process: new Process(options),\n      watch() {},\n      query: {},\n    } as IContext;\n    this.init(options);\n  }\n\n  init(options: IAdapterOptions) {\n    // 依据配置补全ctx\n    this._initOptions(options);\n    this._initWatchData();\n    this._initProxyData();\n  }\n\n  getCtx() {\n    return this.ctx;\n  }\n\n  bindCtx(page: IPureObject, query: IPureObject) {\n    // if (!this.ctx && page) {\n    // }\n    this.ctx.query = {\n      ...this.ctx.query,\n      ...query,\n    };\n    page.ctx = this.ctx;\n  }\n\n  _initOptions(options: IAdapterOptions) {\n    // 把多个extension组合起来，生成name为key的对象\n    const extensions = options.extensions.reduce((data: { [x: string]: any }, current: { name: string | number }) => {\n      data[current.name] = current;\n      return data;\n    }, {});\n    this._options = {\n      extensions,\n      debug: options.debug,\n    };\n    this._extensionData = Object.values(extensions).reduce((data, current) => {\n      if (!current.data) {\n        return data;\n      }\n      Object.keys(current.data).forEach((key) => {\n        data[key] = undefined;\n      });\n\n      return data;\n    }, {});\n  }\n\n  _initProxyData() {\n    const { ctx, _watchers: watchers } = this;\n    this.ctx.data = new Proxy(this._extensionData, {\n      set(target, propKey: string | number, value, receiver) {\n        const oldValue = target[propKey];\n        watchers.notify(propKey, [value, oldValue], ctx);\n        return Reflect.set(target, propKey, value, receiver);\n      },\n      get(target, propKey: string | number, receiver) {\n        return Reflect.get(target, propKey, receiver);\n      },\n    });\n  }\n\n  _initWatchData() {\n    const watcher = new Watcher();\n    this._watchers = watcher;\n    this.ctx.watch = (key: string | number, callback: Function) => {\n      if (!(key in this._extensionData)) {\n        /* istanbul ignore next */\n        if (this._options.debug) {\n          Logger.warn(`ranta-adapter: watch-data ${key} not in extensions ...`);\n        }\n        return () => {};\n      }\n      return watcher.watch(key, callback, this.ctx);\n    };\n  }\n}\n\nexport * from './helper';\n","import Modal from 'antd/lib/modal';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\n\nexport const showConfirm = (options = {}) => {\n  const {\n    title = '',\n    content = '',\n    onOk = () => {}\n  } = options;\n\n  Modal.confirm({\n    title,\n    icon: <ExclamationCircleOutlined />,\n    content,\n    onOk,\n    onCancel() {\n      console.log('Cancel');\n    },\n    getContainer: document.getElementById('modal')\n  });\n}\n\nexport const showInfo = (options = {}) => {\n  const {\n    title = '',\n    content = ''\n  } = options;\n\n  Modal.confirm({\n    title,\n    icon: <ExclamationCircleOutlined />,\n    content,\n    getContainer: document.getElementById('modal')\n  });\n}\n","const Config = {\n  BaseApi: '',\n  scanUrl: 'https://testnet.bscscan.com/',\n  // 交易币种名称\n  whitepaperLink: 'http://www.anobor.com/',\n  githubLink: '',\n  twitterLink: 'https://twitter.com/Anobor_Anobor',\n  mediumLink: '',\n  telegramLink: 'https://t.me/AnoborFans',\n  docLink: '',\n  NETWORK: 97,\n  swapUrl: 'https://trade.bscswap.com/#/add/',\n  // 合约\n  COL_ADDRESS: {\n    'BTCB': '0x6ce8dA28E2f864420840cF74474eFf5fD80E65B8',\n    'ETH':'0xd66c6b4f0be8ce5b39d52e0fd1344c389929b378',\n  },\n  LP_ADDRESS: {\n    'BTCB': '0x92b8c83bEEAD3925f10901E5dED741Df243706f0',\n    // 'ETH': '0x40b9ef175e61776d89c31ca434d8214775656016'\n    'ETH': '0xc6a1a807735c5c84f3b6b45039c3f72f16e525f6'\n  },\n  BTOKEN_ADDRESS: {\n    'BTCB': {\n      'BRTOKEN': '0x51496869b8ca5d2e1f841982afbe9a48145f5e46',\n      'BCTOKEN': '0x8a8dc833563ca757c13e51c284bb7aebc79a21c8',\n    },\n    // 'ETH':{\n    //   'BRTOKEN': '0xEECF423Cf09900Bc85E2252Bf9e3076816d510D0',\n    //   'BCTOKEN': '0x90ac94f413204797252eFB48D2080A71912f0d0C',\n    // },\n    'ETH':{\n      'BRTOKEN': '0x77d96510a36e77c59594af5b5950af1037760945',\n      'BCTOKEN': '0x1d323f4e2dac1216a95bad194e043d96d5a5bd6c',\n    }\n  },\n  CONTRACT_ADDRESS: {\n    'PAIRED': '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n    'BUMPER': '0xCce7696a73f0463BDC6f438bEB2721Be28CAd1Df',\n    'BumperCore': '0x5B3c58529393B398FCE090E637c31fCD392d8306',\n    'BumperZap': '0xa2045390EB731d1c9a4010F08B3e6c0c94d396ca',\n    'SwapRouter': '0xd954551853f55deb4ae31407c423e67b1621424a',\n    'BumperFarm': '0x3a75BcC6B2c330B91e478C7AA4e3D0b199d04155',\n  },\n  PRICE_ADDRESS: {\n    'BTCB2WBNB' : '0xce4c703611e906156d16363c533e7f38191466f2',\n    'BTCB_BC2WBNB' : '0x92b8c83beead3925f10901e5ded741df243706f0',\n    'WBNB2BUMPER' : '0x134a2a92f6611cefb68a39dfb13e0b5a88150535',\n    'WBNB2ETH': '0xa52827e962edfadfd7ad856e7f4c6dabe102093d',\n    // 'ETH_BC2WBNB': '0x40b9ef175e61776d89c31ca434d8214775656016'\n    'ETH_BC2WBNB': '0xc6a1a807735c5c84f3b6b45039c3f72f16e525f6'\n  },\n  REWARD_PER_DAY: {\n    'BTCB': 500,\n    'ETH': 700\n  },\n  EXPIRY_MAP: {\n    'BTCB': '2021-05-31',\n    'ETH': '2021-05-10'\n  },\n  paired: 'WBNB',\n  MARKET_POOL_LIST: [\n    {\n      key: 'btcb',\n      col: 'BTCB',\n      logo: 'https://raw.githubusercontent.com/iearn-finance/yearn-assets/master/icons/tokens/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo-128.png',\n      logoPaired: 'https://raw.githubusercontent.com/iearn-finance/yearn-assets/master/icons/tokens/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo-128.png',\n      expiryText: '12/31/21 23:59 PM GMT+8',\n      mintRatioText: '1.00',\n      expiry: '1640995200',\n      mintRatio: '1000000000000000000',\n    },\n    // {\n    //   key: 'eth',\n    //   col: 'ETH',\n    //   logo: 'https://raw.githubusercontent.com/iearn-finance/yearn-assets/master/icons/tokens/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo-128.png',\n    //   logoPaired: 'https://raw.githubusercontent.com/iearn-finance/yearn-assets/master/icons/tokens/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo-128.png',\n    //   expiryText: '05/10/21 00:00 PM GMT+8',\n    //   mintRatioText: '0.01',\n    //   expiry: '1620576000',\n    //   mintRatio: '10000000000000000'\n    // },\n    {\n      key: 'eth',\n      col: 'ETH',\n      logo: 'https://raw.githubusercontent.com/iearn-finance/yearn-assets/master/icons/tokens/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo-128.png',\n      logoPaired: 'https://raw.githubusercontent.com/iearn-finance/yearn-assets/master/icons/tokens/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo-128.png',\n      expiryText: '05/15/21 00:00 PM GMT+8',\n      mintRatioText: '150',\n      expiry: '1621008000',\n      mintRatio: '150000000000000000000'\n    }\n  ],\n  FARM_POOL_LIST: [\n    {\n      'key': 'btcb',\n      'col': 'BTCB',\n      'pool': 'WBNB - BC_BTCB_1_WBNB_2021_12_31',\n      'rewardsText': '3000.00 BUMPER/week',\n    },\n    // {\n    //   'key': 'eth',\n    //   'col': 'ETH',\n    //   'pool': 'WBNB - ETH_0.01_WBNB_20210510',\n    //   'rewardsText': '700 BUMPER/week',\n    // }\n    {\n      'key': 'eth',\n      'col': 'ETH',\n      'pool': 'WBNB - ETH_150_WBNB_20210515',\n      'rewardsText': '100 BUMPER/week',\n    }\n  ]\n};\n\nexport default Config;\n","\nexport const ETH_NETWORK = {\n  1: 'Ethereum Mainnet',\n  2: 'Morden Testnet (deprecated)',\n  3: 'Ropsten Testnet',\n  4: 'Rinkeby Testnet',\n  42: 'Kovan Testnet',\n  97: 'BSC Testnet'\n};\n","import Config from '../../config';\nimport ctx from '../index';\nimport { convertByWei, convertByEth, alertSuccess, alertError } from '../../utils';\n// col\nconst COL_ADDRESS = Config.COL_ADDRESS\nconst BTOKEN_ADDRESS = Config.BTOKEN_ADDRESS\n// temp\n// 1640995200\n// const expiry = Math.floor((new Date('2022-01-01')).getTime() / 1000);\n// 1000000000000000000\n// const mintRatio = '1000000000000000000';\n\n// 合约地址\nconst { PAIRED, BumperCore, BumperZap, SwapRouter } = Config.CONTRACT_ADDRESS\n\nconst getErc20Json = async () => {\n  const result = await fetch(`${Config.BaseApi}/ERC20.json`);\n  return await result.json();\n};\nconst getBumperCoreJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/BumperCore.json`);\n  return await result.json();\n};\nconst getBumperZapJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/BumperZap.json`);\n  return await result.json();\n};\nconst getBTokenJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/bToken.json`);\n  return await result.json();\n};\nconst getBumperFarmJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/BonusRewards.json`);\n  return await result.json();\n};\nconst getRouterJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/IRouter.json`);\n  return await result.json();\n};\nconst getLpJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/lp.json`);\n  return await result.json();\n};\n\n// 初始化合约\nexport const initContract = async () => {\n  const { chainProvider } = ctx.data;\n  if (!chainProvider) {\n    console.error('chainProvider not inited');\n    return;\n  }\n\n  // 异步加载 @truffle 优化体积\n  // const TruffleContract = await import(\n  //   /* webpackChunkName: 'truffle' */\n  //   '@truffle/contract'\n  // ).then(m => m.default);\n  const TruffleContract = window.TruffleContract;\n\n  // col和paired\n  const erc20 = await getErc20Json();\n  const Erc20Contract = TruffleContract(erc20);\n  Erc20Contract.setProvider(chainProvider);\n  ctx.data.Erc20Contract = Erc20Contract;\n\n  // btoken\n  const bTokenJSON = await getBTokenJson();\n  const BTokenContract = TruffleContract(bTokenJSON);\n  BTokenContract.setProvider(chainProvider);\n  ctx.data.BTokenContract = BTokenContract;\n\n  // bumperCore\n  const BumperCoreJSON = await getBumperCoreJson();\n  const BumperCoreContract = TruffleContract(BumperCoreJSON);\n  BumperCoreContract.setProvider(chainProvider);\n  ctx.data.BumperCoreContract = BumperCoreContract;\n\n  // bumperZap\n  const BumperZapJSON = await getBumperZapJson();\n  const BumperZapContract = TruffleContract(BumperZapJSON);\n  BumperZapContract.setProvider(chainProvider);\n  ctx.data.BumperZapContract = BumperZapContract;\n\n  // bumperFarm\n  const BumperFarmJSON = await getBumperFarmJson();\n  const BumperFarmContract = TruffleContract(BumperFarmJSON);\n  BumperFarmContract.setProvider(chainProvider);\n  ctx.data.BumperFarmContract = BumperFarmContract;\n\n  // swapRouter\n  const routerJSON = await getRouterJson();\n  const SwapRouterContract = TruffleContract(routerJSON);\n  SwapRouterContract.setProvider(chainProvider);\n  ctx.data.SwapRouterContract = SwapRouterContract;\n\n  // lp\n  const lpJson = await getLpJson();\n  const LpContract = TruffleContract(lpJson);\n  LpContract.setProvider(chainProvider);\n  ctx.data.LpContract = LpContract;\n}\n\n// bumper函数\n// 获取col的数目\nexport const getColAmount = async (col, address) => {\n  const { Erc20Contract} = ctx.data;\n  let map = ctx.data.colAmtMap || {}\n  const btcbIns = await Erc20Contract.at(COL_ADDRESS[col]);\n  let res = await btcbIns.balanceOf(address)\n  let amount = convertByWei(res)\n  console.log('colAmt', col, amount)\n  map[col] = amount\n  ctx.data.colAmtMap = map\n  return\n}\n\n// 获取paired的数目\nexport const getPairedAmount = async (address) => {\n  const { Erc20Contract } = ctx.data;\n  const btcbIns = await Erc20Contract.at(PAIRED);\n  let res = await btcbIns.balanceOf(address)\n  let amount = convertByWei(res)\n  console.log('paired', amount)\n  ctx.data.pairedAmt = amount\n  return amount\n}\n\n// 获取btoken的数目\nexport const getBTokenAmount = async (col, address) => {\n  const { BTokenContract } = ctx.data;\n  let res, brAmt, bcAmt;\n  const brIns = await BTokenContract.at(BTOKEN_ADDRESS[col]['BRTOKEN']);\n  res = await brIns.balanceOf(address)\n  brAmt = convertByWei(res)\n  const bcIns = await BTokenContract.at(BTOKEN_ADDRESS[col]['BCTOKEN']);\n  res = await bcIns.balanceOf(address)\n  bcAmt = convertByWei(res)\n  if(col === 'BTCB'){\n    ctx.data.btcbBTokenAmt = [bcAmt, brAmt]\n  }else{\n    ctx.data.ethBTokenAmt = [bcAmt, brAmt]\n  }\n  console.log(col,'br:', brAmt, 'bc', bcAmt)\n  return\n}\n\n// 查看是否授权，验证给zap和core两个合约的\nexport const isApproveCol = async () => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  let map = ctx.data.approveMap || {}\n  for(let col of Object.keys(COL_ADDRESS)){\n    const colIns = await Erc20Contract.at(COL_ADDRESS[col]);\n    map[col] = {}\n    // 验证1\n    let res = await colIns.allowance(chainAccount, BumperZap);\n    let approveNum = convertByWei(res)\n    map[col]['zapStatus'] = approveNum > 0\n    map[col]['zapApproved'] = approveNum \n    // 验证2\n    res = await colIns.allowance(chainAccount, BumperCore);\n    approveNum = convertByWei(res)\n    map[col]['coreStatus'] = approveNum > 0\n    map[col]['coreApproved'] = approveNum\n  }\n  // console.log('approveMap:', map)\n  ctx.data.approveMap = map\n};\n\nexport const isApprovePaired = async () => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  let map = ctx.data.approveMap || {}\n  const col = 'PAIRED'\n  const pairedIns = await Erc20Contract.at(PAIRED);\n  map[col] = {}\n  // 验证1\n  let res = await pairedIns.allowance(chainAccount, BumperCore);\n  let approveNum = convertByWei(res)\n  map[col]['coreStatus'] = approveNum > 0\n  map[col]['coreApproved'] = approveNum\n  // 验证2\n  res = await pairedIns.allowance(chainAccount, SwapRouter);\n  approveNum = convertByWei(res)\n  map[col]['swapStatus'] = approveNum > 0\n  map[col]['swapApproved'] = approveNum\n  // console.log('approveMap:', map)\n  ctx.data.approveMap = map\n};\n\n// 授权col\nexport const approveCol = async (col, amount, contractAddress) => {\n  const colAddress = COL_ADDRESS[col]\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const colIns = await Erc20Contract.at(colAddress);\n  // 授权\n  try {\n    let res = await colIns.approve(\n      contractAddress,\n      convertByEth(amount),\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('APPROVE SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// 授权paired\nexport const approvePaired = async (amount, contractAddress, pairedAddress = PAIRED) => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const pairedIns = await Erc20Contract.at(pairedAddress);\n  // 授权\n  try {\n    let res = await pairedIns.approve(\n      contractAddress,\n      convertByEth(amount),\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('APPROVE SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\nexport const depositAndSwapToPaired = async (col, num, ext) => {\n  ctx.event.emit('showLoading', 'BORROWING');\n  const { expiry: e, mintRatio: m } = ext\n  const amount = convertByEth(num)\n  const { BumperZapContract, chainAccount } = ctx.data;\n  const zapInstance = await BumperZapContract.at(BumperZap);\n  try {\n    const params = [\n      COL_ADDRESS[col],\n      PAIRED,\n      e,\n      m,\n      amount,\n      '0',\n      [BTOKEN_ADDRESS[col]['BCTOKEN'], PAIRED], // 根据代码填的\n      e // 设置了截止时间为到期时间\n    ]\n    let res = await zapInstance.depositAndSwapToPaired(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('BORROW SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\nexport const lend = async (col, num, ext) => {\n  ctx.event.emit('showLoading', 'LENDING');\n  const { expiry: e } = ext\n  const amount = convertByEth(num)\n  const { SwapRouterContract, chainAccount } = ctx.data;\n  const swapInstance = await SwapRouterContract.at(SwapRouter);\n  try {\n    const params = [\n      amount,\n      0,\n      [PAIRED, BTOKEN_ADDRESS[col]['BCTOKEN']],\n      chainAccount,\n      e,\n    ]\n    let res = await swapInstance.swapExactTokensForTokens(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('LEND SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\nexport const deposit = async (col, num, ext) => {\n  ctx.event.emit('showLoading', 'DEPOSITING');\n  const { expiry: e, mintRatio: m } = ext\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      COL_ADDRESS[col],\n      PAIRED,\n      e,\n      m,\n      amount,\n    ]\n    let res = await coreInstance.deposit(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('DEPOSIT SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// 通用的mmDeposit\nexport const mmDeposit = async (col, num, ext) => {\n  ctx.event.emit('showLoading', 'DEPOSITING');\n  const { expiry: e, mintRatio: m } = ext\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      COL_ADDRESS[col],\n      PAIRED,\n      e,\n      m,\n      amount,\n    ]\n    let res = await coreInstance.mmDeposit(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('MMDEPOSIT SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// repay, brtoken+paired，换回btcb\nexport const repay = async (col, num, ext) => {\n  ctx.event.emit('showLoading', 'REPAYING');\n  const { expiry: e, mintRatio: m } = ext\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      COL_ADDRESS[col],\n      PAIRED,\n      e,\n      m,\n      amount,\n    ]\n    let res = await coreInstance.repay(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('REPAY SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// redeem, brtoken+bctoken，换回btcb\nexport const redeem = async (col, num, ext) => {\n  ctx.event.emit('showLoading', 'REDEEMING');\n  const { expiry: e, mintRatio: m } = ext\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      COL_ADDRESS[col],\n      PAIRED,\n      e,\n      m,\n      amount,\n    ]\n    let res = await coreInstance.redeem(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('REDEEM SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// collect, bctoken，换回paired\nexport const collect = async (col, num, ext) => {\n  ctx.event.emit('showLoading', 'COLLECTING');\n  const { expiry: e, mintRatio: m } = ext\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      COL_ADDRESS[col],\n      PAIRED,\n      e,\n      m,\n      amount,\n    ]\n    let res = await coreInstance.collect(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('COLLECT SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// before\n\n// //转账HT\n// export const tranferHT = async (account, recommender) => {\n//   const { chainProvider, chainAccount } = ctx.data;\n\n//   try {\n//     const txHash = await chainProvider.request({\n//       method: 'eth_sendTransaction',\n//       params: [{\n//         from: chainAccount,\n//         to: '0x015BF3bDd57068721a2f6d16E74Fa41f699c979E',\n//         value: '0x11c37937e08000',\n//       }],\n//     }).then(function (result) {\n//       addPid(account, recommender);\n//     })\n//   } catch (err) {\n\n//   }\n\n// };\n","import Config from '../../config';\nimport ctx from '../index';\nimport { convertByWei, convertByEth, alertSuccess, alertError } from '../../utils';\n\nconst { BumperFarm, BUMPER } = Config.CONTRACT_ADDRESS;\n// col\nconst LP_ADDRESS = Config.LP_ADDRESS\n// bumper函数\n// 获取bumper的数目\nexport const getBumperAmount = async (address) => {\n  const { Erc20Contract } = ctx.data;\n  const instance = await Erc20Contract.at(BUMPER);\n  let res = await instance.balanceOf(address)\n  let amount = convertByWei(res)\n  console.log('bumper', amount)\n  ctx.data.bumperAmt = amount\n  return\n}\n\n// 可用的Lp，SwapLp，在swap中拼成了lp，可去stake\nexport const getSwapLpAmount = async (col, address) => {\n  const { Erc20Contract } = ctx.data;\n  const instance = await Erc20Contract.at(LP_ADDRESS[col]);\n  let res = await instance.balanceOf(address)\n  let amount = convertByWei(res)\n  console.log('swap lp', col, amount)\n  let map = ctx.data.swapLpAmtMap || {}\n  map[col] = amount\n  ctx.data.swapLpAmtMap = map\n  return\n}\n\nexport const getStakeLpAmount = async (col, address) => {\n  const { BumperFarmContract } = ctx.data;\n  const instance = await BumperFarmContract.at(BumperFarm);\n  let res = await instance.getUser(LP_ADDRESS[col], address)\n  let stakeLp = res[0][0]\n  let reward = res[1].length ? res[1][0] : '0'\n  stakeLp = convertByWei(stakeLp)\n  reward = convertByWei(reward)\n  console.log(col, 'stakeLp', stakeLp, 'reward', reward)\n  let map = ctx.data.stakeLpAmtMap || {}\n  map[col] = stakeLp\n  ctx.data.stakeLpAmtMap = Object.assign({}, map)\n  let map2 = ctx.data.rewardMap || {}\n  map2[col] = reward\n  ctx.data.rewardMap = Object.assign({}, map2)\n  return\n}\n\n// 获取总的lp staked的量\nexport const getLpTotalStaked = async (col) => {\n  const { Erc20Contract } = ctx.data;\n  const instance = await Erc20Contract.at(LP_ADDRESS[col]);\n  let res = await instance.totalSupply()\n  let amount = convertByWei(res)\n  console.log('lp totalSupply', amount)\n  let map = ctx.data.poolStakedMap || {}\n  map[col] = amount\n  ctx.data.poolStakedMap = map\n  return\n}\n\n// 获取总的lp中两个token的量\nexport const getLpTotalReserves = async (col) => {\n  const { LpContract, poolSupplyMap = {} } = ctx.data;\n  const instance = await LpContract.at(LP_ADDRESS[col]);\n  let res = await instance.getReserves()\n  let amount0 = convertByWei(res._reserve0) // _reserve0, bctoken\n  let amount1 = convertByWei(res._reserve1) // _reserve1, paired\n  poolSupplyMap[col] = [(0.1 * amount0).toFixed(5), (0.1 * amount1).toFixed(5)]\n  ctx.data.poolSupplyMap = poolSupplyMap\n  console.log('lp reserve', amount1, ctx.data.poolSupplyMap)\n  return\n}\n\nexport const isApproveLP = async () => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  let map = ctx.data.approveLpMap || {}\n  for (let col of Object.keys(LP_ADDRESS)) {\n    map[col] = {}\n    const lpIns = await Erc20Contract.at(LP_ADDRESS[col]);\n    const res = await lpIns.allowance(chainAccount, BumperFarm);\n    let approveNum = convertByWei(res)\n    map[col]['lpStatus'] = approveNum > 0\n    map[col]['lpApproved'] = approveNum\n  }\n  // console.log('approveLpMap', map)\n  ctx.data.approveLpMap = map\n};\n\n// 授权lp\nexport const approveLP = async (col, amount) => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const lpIns = await Erc20Contract.at(LP_ADDRESS[col]);\n  // 授权\n  try {\n    let res = await lpIns.approve(\n      BumperFarm,\n      convertByEth(amount),\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('APPROVE SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// stake\nexport const stake = async (col, num) => {\n  ctx.event.emit('showLoading', 'STAKING');\n  const amount = convertByEth(num)\n  const { BumperFarmContract, chainAccount } = ctx.data;\n  const farmIns = await BumperFarmContract.at(BumperFarm)\n  try {\n    const params = [\n      LP_ADDRESS[col],\n      amount,\n    ]\n    let res = await farmIns.deposit(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('STAKE SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n}\n\n// withdraw\nexport const withdraw = async (col, num) => {\n  ctx.event.emit('showLoading', 'WITHDRAWING');\n  const amount = convertByEth(num)\n  const { BumperFarmContract, chainAccount } = ctx.data;\n  const farmIns = await BumperFarmContract.at(BumperFarm)\n  try {\n    const params = [\n      LP_ADDRESS[col],\n      amount,\n    ]\n    let res = await farmIns.withdraw(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('WITHDRAWING SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n}\n\n// claim\nexport const claim = async (col) => {\n  ctx.event.emit('showLoading', 'CLAIMING');\n  const { BumperFarmContract, chainAccount } = ctx.data;\n  const farmIns = await BumperFarmContract.at(BumperFarm)\n  try {\n    let res = await farmIns.claimRewardsForPools(\n      [LP_ADDRESS[col]],\n      {\n        from: chainAccount\n      }\n    );\n    alertSuccess('CLAIMING SUCCESS');\n    return res;\n  } catch (err) {\n    alertError(err.message)\n  } finally {\n    ctx.event.emit('hideLoading');\n  }\n}","import Config from '../../config';\nimport ctx from '../index';\n\nconst { BTCB2WBNB, BTCB_BC2WBNB, ETH_BC2WBNB, WBNB2BUMPER, WBNB2ETH } = Config.PRICE_ADDRESS;\n\n// btcb\nexport const getBtcbPrice = async () => {\n  const { LpContract } = ctx.data;\n  const instance = await LpContract.at(BTCB2WBNB);\n  let res = await instance.getReserves() // token0是btcb，token1是wbnb，所以token1Amt/token0Amt就是price\n  ctx.data.btcbPrice = Math.round(res._reserve1 * 100 / res._reserve0) / 100\n  console.log('btcbPrice', ctx.data.btcbPrice)\n  return\n}\n\nexport const getBcTokenPrice = async (col) => {\n  const address = col === 'BTCB' ? BTCB_BC2WBNB : ETH_BC2WBNB\n  const { LpContract } = ctx.data;\n  const instance = await LpContract.at(address);\n  let res = await instance.getReserves()\n  // token0： bctoken\n  // token1： wbnb\n  // num0 * price0 = num1 * price1\n  // bcPrice = price0 / price1 = num1 / num0\n  let price = Math.round(res._reserve1 * 100 / res._reserve0) / 100\n  let map = ctx.data.bcPriceMap || {}\n  map[col] = price\n  ctx.data.bcPriceMap = map\n  console.log(col, 'bcPrice', price, '11111111')\n  return\n}\n\n// eth\nexport const getEthPrice = async () => {\n  const { LpContract } = ctx.data;\n  const instance = await LpContract.at(WBNB2ETH);\n  let res = await instance.getReserves() // token0是wbnb，token1是eth，所以token1Amt/token0Amt就是price\n  ctx.data.ethPrice = Math.round(res._reserve0 * 100 / res._reserve1) / 100\n  console.log('ethPrice', ctx.data.ethPrice)\n  return\n}\n\n// bumper\nexport const getBumperPrice = async () => {\n  const { LpContract } = ctx.data;\n  const instance = await LpContract.at(WBNB2BUMPER);\n  let res = await instance.getReserves() // token0是wbnb，token1是bumper，所以token0Amt/token1Amt就是price\n  ctx.data.bumperPrice = Math.round(res._reserve0 * 100 / res._reserve1) / 100\n  console.log('bumperPrice', ctx.data.bumperPrice)\n  return\n}\n","import Config from '../../config';\nimport ctx from '../index';\n\nconst REWARD_PER_DAY = Config.REWARD_PER_DAY\nconst EXPIRY_MAP = Config.EXPIRY_MAP\n\nexport const getLpApy = async (col) => {\n  const { poolStakedMap, bcPriceMap, bumperPrice } = ctx.data;\n  const lpTotalTmp = poolStakedMap[col]\n  const bcPrice = bcPriceMap[col]\n  const RewardValue = REWARD_PER_DAY[col] * bumperPrice;\n  const lpValue = (bcPrice+1) * lpTotalTmp; // lp的价格应该等于bctoken价格+paired价格，等于+1基准\n  const apy = Math.round(10000 * 365 * RewardValue / lpValue) / 100;\n  let map = ctx.data.lpApyMap || {}\n  map[col]= apy;\n  ctx.data.lpApyMap = map\n  // console.log('apy', stakeLpTmp, lpTotalTmp, bcPrice, apy)\n  return\n}\n\nexport const getLendApy = async (col) => {\n  const { bcPriceMap } = ctx.data;\n  const bcPrice = bcPriceMap[col]\n  const expiryDate = EXPIRY_MAP[col]\n  const expiry = Math.floor((new Date(expiryDate)).getTime() / 1000);\n  const now = Math.floor((new Date()).getTime() / 1000);\n  // 假设本金是1，到期后可以拿到的bc为(1 / bcPrice)，那么interest为 （1 / bcPrice）- 1\n  const interest = (1 / bcPrice) - 1\n  const duration =  (expiry-now)/(60*60*24) // 天枢\n  let map = ctx.data.lendApyMap || {}\n  map[col] = Math.round((10000 * interest/duration) * 365)/100\n  ctx.data.lendApyMap = map\n  return\n}\n\nexport const getBorrowApy = async (col) => {\n  const { bcPriceMap } = ctx.data;\n  const bcPrice = bcPriceMap[col]\n  const expiryDate = EXPIRY_MAP[col]\n  const expiry = Math.floor((new Date(expiryDate)).getTime() / 1000);\n  const now = Math.floor((new Date()).getTime() / 1000);\n  // 假设本金是1，实际上可以抵押mintRatio后为1，即到时候要偿还1，现在拿到手为 1 * bcPrice，那么借款方要付出interest为 (1-bcPrice)\n  const interest = (1 - 1 * bcPrice) \n  const duration =  (expiry-now)/(60*60*24) // 天数\n  let map = ctx.data.borrowApyMap || {}\n  map[col] = Math.round((10000 * interest/duration) * 365)/100\n  ctx.data.borrowApyMap = map\n  return\n}\n\n","// import detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { ETH_NETWORK } from './constants';\nimport Config from '../../config';\nimport ctx from '../index';\nimport { showConfirm } from '../../components/Modal';\nimport { getColAmount, getPairedAmount, getBTokenAmount, isApproveCol, isApprovePaired } from './transaction';\nimport { getBumperAmount, getSwapLpAmount, getStakeLpAmount, getLpTotalStaked, isApproveLP, getLpTotalReserves } from './farmTransaction';\nimport { getBtcbPrice, getBcTokenPrice, getBumperPrice, getEthPrice } from './price';\nimport { getLpApy, getLendApy, getBorrowApy } from './apy';\nimport { alertError, getDefaultTheme } from '../../utils';\n\nconst crt_net = Config.NETWORK\n\n// 初始化metamask，初始化链上数据\nexport const initChain = async () => {\n  // 异步加载 @metamask 优化体积\n  const detectEthereumProvider = await import(\n    /* webpackChunkName: 'metamask' */\n    '@metamask/detect-provider'\n  ).then(m => m.default);\n  // Detect the MetaMask Ethereum provider\n  // this returns the provider, or null if it wasn't detected\n  const provider = await detectEthereumProvider();\n  if (provider) {\n    if (provider === window.ethereum) {\n      ctx.data.chainProvider = provider;\n      const network = await provider.request({\n        method: 'net_version',\n        params: [],\n      });\n      console.log('current network is:', network, ETH_NETWORK[network]);\n      if(crt_net!=network){\n        alertError('please change to correct network')\n        return 1\n      }\n      // 注册web3 provider\n      ctx.data.web3 = new Web3(provider);\n    } else {\n      showConfirm({\n        title: 'Please only use MetaMask!',\n        content: 'Do you have multiple wallets installed?',\n        onOk() {\n          window.location.href = 'https://metamask.io/download.html';\n        }\n      });\n    }\n  } else {\n    // ctx.data.web3 = new Web3.providers.HttpProvider(\"http://localhost:8545\");\n    showConfirm({\n      title: 'Please install MetaMask!',\n      content: 'You have not install MetaMask, jump link to install?',\n      onOk() {\n        window.location.href = 'https://metamask.io/download.html';\n      }\n    });\n  }\n};\n\nexport const initTheme = () => {\n  let defaultTheme = getDefaultTheme();\n  ctx.data.theme = defaultTheme;\n}\n\n// 更新账号信息，Market页\nexport const updateAccount = async (account) => {\n  console.log('updateAccount market......');\n  if (account && account.length) {\n    const chainAccount = account[0];\n    if(!ctx.data.chainAccount){\n      ctx.data.chainAccount = chainAccount;\n    }\n    // paired\n    await getPairedAmount(chainAccount);\n    await getBumperAmount(chainAccount); // 获取bumper的数目\n    // 并行处理\n    await Promise.all([\n      new Promise((resolve) => {\n        (async () => {\n          // approve\n          await isApproveCol(); // 是否授权了btcb\n          await isApprovePaired(); // 是否授权了paired\n          resolve()\n        })();\n      }),\n      new Promise((resolve) => {\n        (async () => {\n          await getColAmount('BTCB',chainAccount);\n          await getColAmount('ETH',chainAccount);\n          resolve()\n        })();\n      }),\n      new Promise((resolve) => {\n        (async () => {\n          await getBTokenAmount('BTCB', chainAccount);\n          await getBTokenAmount('ETH', chainAccount);\n          resolve()\n        })();\n      }),\n    ]).then(()=>{});\n  } else {\n    ctx.data.chainAccount = 0;\n  }\n}\n\n// 更新账号信息, Farm页\nexport const updateAccountFarm = async (account) => {\n  console.log('updateAccount farm ......');\n  if (account && account.length) {\n    const chainAccount = account[0];\n    if(!ctx.data.chainAccount){\n      ctx.data.chainAccount = chainAccount;\n    }\n    // 并行处理\n    await Promise.all([\n      new Promise((resolve) => {\n        (async () => {\n          // approve\n          await isApproveLP(); // 是否授权了lp\n          resolve()\n        })();\n      }),\n      new Promise((resolve) => {\n        (async () => {\n          await getSwapLpAmount('BTCB', chainAccount); // 获取btcb对应的btoken生成的lp的数目\n          await getSwapLpAmount('ETH', chainAccount); // 获取btcb对应的btoken生成的lp的数目\n          resolve()\n        })();\n      }),\n      new Promise((resolve) => {\n        (async () => {\n          await getStakeLpAmount('BTCB', chainAccount);\n          await getStakeLpAmount('ETH', chainAccount);\n          resolve()\n        })();\n      })\n    ]).then(()=>{});\n  }\n}\n\n// 更新supply总量的数据\nexport const updateSupply = async () => {\n  console.log('updateSupply ......');\n  await getLpTotalStaked('BTCB');// 获取lp totalSupply\n  await getLpTotalReserves('BTCB');\n  await getLpTotalStaked('ETH');// 获取lp totalSupply\n  await getLpTotalReserves('ETH');\n}\n\n// 更新价格\nexport const updatePrice = async () => {\n  console.log('updatePrice ......');\n  // btcb\n  await getBtcbPrice();\n  await getBcTokenPrice('BTCB');\n  // eth\n  await getEthPrice();\n  await getBcTokenPrice('ETH');\n  // bumper\n  await getBumperPrice();\n}\n\n// 更新价格\nexport const updateApy = async () => {\n  console.log('updateApy ......');\n  await getLpApy('BTCB');\n  await getLpApy('ETH');\n  await getLendApy('BTCB');\n  await getLendApy('ETH');\n  await getBorrowApy('BTCB');\n  await getBorrowApy('ETH');\n}","/**\n * 页面事件代理\n */\n\nimport Config from '../config';\nimport ctx from './index';\nimport { initChain, initTheme, updateAccount, updateAccountFarm, updateSupply, updatePrice, updateApy } from './contracts/accounts';\nimport { initContract, approveCol, depositAndSwapToPaired, lend, approvePaired, repay, deposit, mmDeposit, redeem, collect } from './contracts/transaction';\nimport { approveLP, stake, withdraw, claim } from './contracts/farmTransaction';\nimport { isNeedApprove, approvedNumAdd } from '../utils'\n\n// 合约地址\nconst { BumperCore, BumperZap, SwapRouter } = Config.CONTRACT_ADDRESS\n// const pairedSymbol = Config.paired\n\nctx.event.listen('showLoading', (message) => {\n  ctx.data.showLoading = true;\n  ctx.data.loadingMessage = message;\n});\n\nctx.event.listen('hideLoading', () => {\n  ctx.data.showLoading = false;\n  ctx.data.loadingMessage = '';\n});\n\n// 切换theme\nctx.event.listen('changeTheme', (theme) => {\n  ctx.data.theme = theme;\n});\n\n// 初始化并连接账户\nctx.event.listen('initEthereum', async () => {\n  ctx.event.emit('showLoading', 'LOADING');\n  let breakFlag = await initChain(); // 选择网络\n  if (breakFlag) {\n    ctx.event.emit('hideLoading');\n    return\n  }\n  await initContract(); // 选择合约\n  await initTheme(); // 选择主题\n  const { chainProvider } = ctx.data;\n  if (chainProvider) {\n    const account = await chainProvider.request({ method: 'eth_accounts' });\n    console.log(account, 'account')\n    if (account && account.length) {\n      // 并行处理\n      await Promise.all([\n        new Promise((resolve) => {\n          (async () => {\n            await updateSupply(); // 更新总量信息\n            resolve()\n          })();\n        }),\n        new Promise((resolve) => {\n          (async () => {\n            await updatePrice(); // 更新price\n            resolve()\n          })();\n        }),\n        new Promise((resolve) => {\n          (async () => {\n            await updateAccount(account);\n            resolve()\n          })();\n        }),\n        new Promise((resolve) => {\n          (async () => {\n            await updateAccountFarm(account);\n            resolve()\n          })();\n        }),\n      ]).then(() => {\n        updateApy(); // 更新apy\n      });\n    }\n    ctx.event.emit('hideLoading');\n  } else {\n    ctx.event.emit('hideLoading');\n  }\n});\n\n// bumper\nctx.event.listen('connectWallet', async () => {\n  const { chainProvider } = ctx.data;\n  if (chainProvider) {\n    let account = '';\n    try {\n      account = await chainProvider.request({ method: 'eth_requestAccounts' });\n      ctx.event.emit('showLoading', 'LOADING');\n      updateAccount(account);\n      updateAccountFarm(account);\n      ctx.event.emit('hideLoading');\n    } catch (err) {\n      if (err.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        // If this happens, the user rejected the connection request.\n        console.log('Please connect to MetaMask.');\n      } else {\n        console.error(err);\n      }\n    }\n  }\n});\n\n// borrow\nctx.event.listen('depositAndSwapToPaired', async (params) => {\n  const { num, col, ext } = params;\n  let { approveMap = {}, chainAccount } = ctx.data\n  // 先approve\n  if (isNeedApprove(approveMap, col, 'zap', num)) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approveCol(col, num, BumperZap);\n    approveMap[col]['zapStatus'] = true\n    approveMap[col]['zapApproved'] = approvedNumAdd(approveMap[col]['zapApproved'], num)\n    ctx.data.approveMap = approveMap;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n  } else {\n    const result = await depositAndSwapToPaired(col, num, ext)\n    console.log('depositAndSwapToPaired', result)\n    updateAccount([chainAccount]);\n  }\n})\n\n// lend\nctx.event.listen('lend', async (params) => {\n  const { num, col, ext } = params;\n  let { approveMap = {}, chainAccount } = ctx.data\n  // 先approve\n  if (isNeedApprove(approveMap, 'PAIRED', 'swap', num)) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approvePaired(num, SwapRouter);\n    approveMap['PAIRED']['swapStatus'] = true;\n    approveMap['PAIRED']['swapApproved'] = approvedNumAdd(approveMap['PAIRED']['swapApproved'], num)\n    ctx.data.approveMap = approveMap;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n  } else {\n    const result = await lend(col, num, ext)\n    console.log('lend', result)\n    updateAccount([chainAccount]);\n  }\n})\n\n// deposit\nctx.event.listen('deposit', async (params) => {\n  const { num, col, ext } = params;\n  let { approveMap = {}, chainAccount } = ctx.data\n  // 先approve\n  if (isNeedApprove(approveMap, col, 'core', num)) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approveCol(col, num, BumperCore);\n    approveMap[col]['coreStatus'] = true\n    approveMap[col]['coreApproved'] = approvedNumAdd(approveMap[col]['coreApproved'], num)\n    ctx.data.approveMap = approveMap;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n  } else {\n    const result = await deposit(col, num, ext)\n    console.log('deposit', result)\n    updateAccount([chainAccount]);\n  }\n})\n\nctx.event.listen('mmDeposit', async (params) => {\n  const { num, col, ext } = params;\n  let { approveMap = {}, chainAccount } = ctx.data\n  // 先approve\n  if (isNeedApprove(approveMap, 'PAIRED', 'core', num)) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approvePaired(num, BumperCore);\n    approveMap['PAIRED']['coreStatus'] = true;\n    approveMap['PAIRED']['coreApproved'] = approvedNumAdd(approveMap['PAIRED']['coreApproved'], num)\n    ctx.data.approveMap = approveMap;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n  } else {\n    const result = await mmDeposit(col, num, ext)\n    console.log('mmDeposit', result)\n    updateAccount([chainAccount]);\n  }\n})\n\n\nctx.event.listen('repay', async (params) => {\n  const { num, col, ext } = params;\n  let { approveMap = {}, chainAccount } = ctx.data\n  // 先approve\n  if (isNeedApprove(approveMap, 'PAIRED', 'core', num)) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approvePaired(num, BumperCore);\n    approveMap['PAIRED']['coreStatus'] = true;\n    approveMap['PAIRED']['coreApproved'] = approvedNumAdd(approveMap['PAIRED']['coreApproved'], num)\n    ctx.data.approveMap = approveMap;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n  } else {\n    const result = await repay(col, num, ext)\n    console.log('repay', result)\n    updateAccount([chainAccount]);\n  }\n})\n\nctx.event.listen('redeem', async (params) => {\n  const { num, col, ext } = params;\n  const result = await redeem(col, num, ext)\n  console.log('redeem', result)\n  updateAccount([ctx.data.chainAccount]);\n})\n\nctx.event.listen('collect', async (params) => {\n  const { num, col, ext } = params;\n  const result = await collect(col, num, ext)\n  console.log('collect', result)\n  updateAccount([ctx.data.chainAccount]);\n})\n\n// farm 操作\nctx.event.listen('stake', async (params) => {\n  const { col, num } = params;\n  let { approveLpMap = {}, chainAccount } = ctx.data\n  // 先approve\n  if (isNeedApprove(approveLpMap, col, 'lp', num)) {\n    ctx.event.emit('showLoading', 'APPROVING ON STAKING');\n    const result = await approveLP(col, num);\n    approveLpMap[col]['lpStatus'] = true\n    approveLpMap[col]['lpApproved'] = approvedNumAdd(approveLpMap[col]['lpApproved'], num)\n    ctx.data.approveLpMap = approveLpMap;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n  } else {\n    const result = await stake(col, num);\n    console.log('stake', result);\n    updateAccountFarm([chainAccount]);\n  }\n});\n\nctx.event.listen('withdraw', async (params) => {\n  const { col, num } = params;\n  const result = await withdraw(col, num)\n  console.log('withdraw', result)\n  updateAccountFarm([ctx.data.chainAccount]);\n});\n\nctx.event.listen('claim', async (params) => {\n  const { col } = params;\n  const result = await claim(col)\n  console.log('claim', result)\n  updateAccountFarm([ctx.data.chainAccount]);\n});\n","import React, { useEffect, useState, Suspense } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport './events/ethereum';\nimport ctx, { mapData, unmapActions } from './events';\nimport { getDefaultTheme } from './utils'\n\nconst Header = React.lazy(() => import('./components/Header'));\nconst Footer = React.lazy(() => import('./components/Footer'));\n\nconst Markets = React.lazy(() => import('./pages/Markets'));\nconst Farms = React.lazy(() => import('./pages/Farms'));\n// const Xbumper = React.lazy(() => import('./pages/Xbumper'));\n\nconst Home = React.lazy(() => import('./pages/Home'));\nconst Loading = React.lazy(() => import('./components/Loading'));\n\nconst App = () => {\n  let defaultTheme = getDefaultTheme();\n  const [theme, setTheme] = useState(defaultTheme);\n\n  useEffect(() => {\n    // 初始化区块链库\n    ctx.event.emit('initEthereum');\n    // 获取theme\n    const lifetimeObj = {};\n    mapData({\n      theme(value){\n        setTheme(value)\n      }\n    }, ctx, lifetimeObj);\n    return () => {\n      unmapActions(lifetimeObj);\n    };\n  }, []);\n\n\n  return (\n    <div className={`page-theme theme-${theme}`}>\n      <Router>\n        <Header />\n        <div className=\"page-body\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/markets\">\n              <Markets />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            {/* <Route path=\"/xbumper\">\n            <Xbumper />\n          </Route> */}\n          </Switch>\n          <Footer />\n        </div>\n        <Loading />\n      </Router>\n    </div>\n  );\n};\n\n\nconst Empty = () => {\n  return (\n    <>\n    </>\n  )\n}\n\nconst renderLoading = () => (<Empty />);\n\nconst renderApp = () => (<App />);\n\nconst RoutePage = () => (\n  <Suspense fallback={renderLoading()}>\n    { renderApp()}\n  </Suspense>\n);\n\nexport default RoutePage;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Routes />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const ETH_TO_WEI = window.BigInt(Math.pow(10, 18));\n\n// 将wei换算成eth单位，除以18\nexport const convertByWei = (wei) => {\n  const bigWei = window.BigInt(wei);\n  // 保留5位小数\n  return window.Number(bigWei * 100000n / ETH_TO_WEI) / 100000;\n};\n// 将eth换算成wei单位，乘以18\nexport const convertByEth = (eth) => {\n  return window.BigInt(Math.round(eth * Math.pow(10, 18)))\n};\n","import ctx from \"../events\";\n\n// 校验\nexport const checkOpValid = (num) => {\n    if(!ctx.data.chainAccount){\n        alert('please connect the wallet')\n        return false;\n    }else if(num<=0){\n        alert('num must more than 0')\n        return false;\n    }\n    return true\n};\n","export const getDefaultTheme = () => {\n    const date = new Date()\n    const hour = date.getHours()\n    return hour > 6 && hour < 18 ? 'light' : 'dark'\n}\n\nexport const isNeedApprove = (approveMap, symbol, type, num) => {\n    const statusKey = type + 'Status'\n    const approvedKey = type + 'Approved'\n    let flag = false\n    if (approveMap[symbol][statusKey] !== true) { // 没有approve过\n        flag = true\n    } else if (approveMap[symbol][approvedKey] < num) { // 目前approved的数目小于操作的数目\n        flag = true\n    }\n    console.log('hasApproved:',approveMap[symbol][approvedKey], 'op:',num)\n    return flag\n}\n\nexport const approvedNumAdd = (add1, add2, length = 5) => {\n    let num1 = typeof (add1) === 'string' ? Number(add1) : add1;\n    let num2 = typeof (add2) === 'string' ? Number(add2) : add2;\n    return (num1 + num2).toFixed(length)\n}","\nexport const FARM_TABLE_HEADER = [\n  'Pool',\n  'Rewards',\n  'APY',\n  'Total Staked',\n  'My Staked',\n  'My Rewards'\n]\n\nexport const MARKET_TABLE_HEADER = [\n  'Market',\n  'Due Date',\n  'Lend/Borrow APY',\n  'My Positions'\n]","import { message } from 'antd';\n\nexport const alertSuccess = (msg) => {\n    let params = {\n        content: msg,\n        className: 'custom-class',\n        style: {\n            marginTop: '20px',\n        },\n    }\n    message.success(params, 5);\n};\n\nexport const alertError = (msg) => {\n    let params = {\n        content: msg,\n        className: 'custom-class',\n        style: {\n            marginTop: '20px',\n        },\n    }\n    message.error(params, 8);\n};\n\n\n"],"sourceRoot":""}