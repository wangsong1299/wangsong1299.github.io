{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/Input.js","components/PercentBox.js","../node_modules/@ant-design/icons/RedoOutlined.js","../node_modules/@ant-design/icons/lib/icons/RedoOutlined.js","../node_modules/@ant-design/icons-svg/lib/asn/RedoOutlined.js","pages/Farms.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","ComponentView","props","token","placeholder","balance","onChange","className","theme","placeholderText","type","event","target","onClick","obj","Object","defineProperty","exports","default","_default","require","__esModule","module","_interopRequireDefault","_interopRequireWildcard","React","_RedoOutlined","_AntdIcon","RedoOutlined","ref","createElement","assign","icon","displayName","forwardRef","Row","item","apy","assetsMap","supply","changeVisible","updateOpNum","updateOpNum2","handleOp","col","pool","rewardsText","opVisible","opNum","opNum2","availableLp","stakeLp","totalStaked","myRewards","poolShareRate","Math","round","colSpan","PageView","defaultTheme","getDefaultTheme","useState","setTheme","list","setList","setAssetsMap","supplyMap","setSupplyMap","apyMap","setApyMap","useEffect","Config","FARM_POOL_LIST","lifetimeObj","mapData","swapLpAmtMap","stakeLpAmtMap","rewardMap","poolStakedMap","lpApyMap","ctx","unmapActions","concat","num","console","log","checkOpValid","emit","style","justifyContent","FARM_TABLE_HEADER","map","text","key"],"mappings":"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","file":"static/js/8.a258d917.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","// bumper\n/**\n * Balance 输入框\n */\n\nimport React from 'react'\n\nimport './Input.scss';\n\nconst ComponentView = (props) => {\n  const {\n    token='',\n    placeholder='',\n    value='',\n    balance=0,\n    onChange=() => {},\n    className='',\n    theme='dark'\n  } = props;\n  const placeholderText = placeholder ? placeholder: `Amount of ${token}`\n  return (\n    <div className={className}>\n      <div className={`balance-input common-${theme}`}>\n        <input\n          type=\"number\"\n          value={value}\n          placeholder={placeholderText}\n          onChange={\n            (event) => onChange(event.target.value)\n          }\n        />\n        <div>\n          <span className=\"max\" onClick={() => onChange(balance)}>Max</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComponentView;\n","// bumper\n/**\n * 百分比框框\n */\n\nimport React from 'react'\n\nimport './PercentBox.scss';\n\nconst ComponentView = (props) => {\n  const {\n    balance=0,\n    theme='dark',\n    onClick = () => { },\n    className = ''\n  } = props;\n  return (\n    <div className={className}>\n      <div className={`p-box p-box-${theme}`}>\n        <div className={`p-cell p-cell-${theme}`} onClick={() => { onClick(0.25*balance) }}>25%</div>\n        <div className={`p-cell p-cell-${theme}`} onClick={() => { onClick(0.5*balance) }}>50%</div>\n        <div className={`p-cell p-cell-${theme}`} onClick={() => { onClick(0.75*balance) }}>75%</div>\n        <div className={`p-cell p-cell-${theme}`} onClick={() => { onClick(balance) }}>100%</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComponentView;\n","'use strict';\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  var _RedoOutlined = _interopRequireDefault(require('./lib/icons/RedoOutlined'));\n  \n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n  \n  var _default = _RedoOutlined;\n  exports.default = _default;\n  module.exports = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _RedoOutlined = _interopRequireDefault(require(\"@ant-design/icons-svg/lib/asn/RedoOutlined\"));\n\nvar _AntdIcon = _interopRequireDefault(require(\"../components/AntdIcon\"));\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(_AntdIcon.default, Object.assign({}, props, {\n    ref: ref,\n    icon: _RedoOutlined.default\n  }));\n};\n\nRedoOutlined.displayName = 'RedoOutlined';\n\nvar _default = /*#__PURE__*/React.forwardRef(RedoOutlined);\n\nexports.default = _default;","\"use strict\";\n// This icon file is generated automatically.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexports.default = RedoOutlined;\n","// bumper\nimport { useEffect, useState } from 'react';\nimport RedoOutlined from '@ant-design/icons/RedoOutlined';\nimport './Farms.scss';\nimport Config from '../config';\nimport ctx, { mapData, unmapActions } from '../events';\nimport { checkOpValid, getDefaultTheme, FARM_TABLE_HEADER } from '../utils';\nimport Input from '../components/Input';\nimport PercentBox from '../components/PercentBox';\n\nconst Row = (props) => {\n  const { item, theme, apy, assetsMap = {}, supply, changeVisible, updateOpNum, updateOpNum2, handleOp } = props;\n  const { col, pool, rewardsText, opVisible, opNum, opNum2 } = item;\n  const availableLp = assetsMap['SWAPLP'] // 可用的lp\n  const stakeLp = assetsMap['STAKELP']\n  const totalStaked = supply\n  const myRewards = assetsMap['REWARD']\n  const poolShareRate = Math.round(stakeLp * 10000 / totalStaked) / 100\n  return (\n    <>\n      <tr className={`farm-pc pointer ${opVisible ? 'bg-'+theme+'-inner' : ''} `} onClick={() => { changeVisible(opVisible, item) }}>\n        <td className=\"td \">{pool}</td>\n        <td className=\"td green\">{rewardsText}</td>\n        <td className=\"td green\">{apy}%</td>\n        <td className=\"td\">{totalStaked}</td>\n        <td className=\"td\">{stakeLp}</td>\n        <td className=\"td\">{myRewards}</td>\n      </tr>\n      <tr className={`farm-wap pointer ${opVisible ? 'bg-'+theme+'-inner' : ''} `} onClick={() => { changeVisible(opVisible, item) }}>\n      <td>\n          <div className=\"flex\">\n            <div className=\"flex1 tac padding5\">\n              {pool}<br />\n              <div className=\"tal fz08\">reward: <span className=\"green\">{rewardsText}</span> </div>\n              <div className=\"tal fz08\">apy: <span className=\"green\">{apy}</span> </div>\n            </div>\n            <div className=\"flex1 tal padding5\">\n              totalLp: {totalStaked}<br />\n            myStaked: <span className=\"green\">{stakeLp}</span> <br />\n            myRewards: <span className=\"green\">{myRewards}</span>\n            </div>\n          </div>\n        </td>\n      </tr>\n      {\n        opVisible ?\n          <tr className={'bg-'+theme+'-inner'}>\n            <td className=\"farm-table-pc\" colSpan=\"6\">\n              <div className='op-box'>\n                <div className=\"op-box-cell op-box-shadow\">\n                  <div className=\"title\">Stake</div>\n                  <div className=\"subtitleBox\">\n                    <div className=\"subtitle\">Available: <span className=\"green\">{availableLp}</span> BLP </div>\n                    <PercentBox theme={theme} balance={availableLp} onClick={(opNum) => { updateOpNum(opNum, item) }} />\n                  </div>\n                  <Input\n                    className=\"mine-input\"\n                    token='BLP'\n                    value={opNum}\n                    onChange={(opNum) => { updateOpNum(opNum, item) }}\n                    balance={availableLp}\n                    theme={theme}\n                  />\n                  <button className={`btn ${opNum ? '' : 'disable'} `} onClick={() => { handleOp(col, 'stake', opNum) }}>Confirm Stake</button>\n                  <div className='flex'>\n                    <div className=\"title flex2\">My Pool Share <span className=\"bGreen\">{poolShareRate}%</span></div>\n                    <div className=\"title flex1 link tar\">Go to Pool</div>\n                  </div>\n                  <div className=\"yellow tips\">Once rewards end, you must claim within 7 days or they will be forfeited.</div>\n                </div>\n                <div className=\"op-box-cell\">\n                  <div className=\"title\">Withdraw</div>\n                  <div className=\"subtitleBox\">\n                    <div className=\"subtitle\">Available:  <span className=\"green\">{stakeLp}</span> BLP </div>\n                    <PercentBox theme={theme} balance={stakeLp} onClick={(opNum) => { updateOpNum2(opNum, item) }} />\n                  </div>\n                  <Input\n                    className=\"mine-input\"\n                    token='BLP'\n                    value={opNum2}\n                    onChange={(opNum) => { updateOpNum2(opNum, item) }}\n                    balance={stakeLp}\n                    theme={theme}\n                  />\n                  <button className={`btn ${opNum2 ? '' : 'disable'} `} onClick={() => { handleOp(col, 'withdraw', opNum2) }}>Confirm Withdraw & Claim Rewards</button>\n                  <div className=\"title\">My Rewards: {myRewards}</div>\n                  <div className=\"warp\">\n                    <button className={`btn left ${myRewards ? '' : 'disable'} `} onClick={() => { handleOp(col, 'claim') }}>Claim Rewards</button>\n                    <div className='right tac'>\n                      <RedoOutlined className=\"icon\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </td>\n            <td className=\"farm-wap\" colSpan=\"2\">\n              <div className='op-box'>\n                <div className=\"op-box-cell op-box-shadow\">\n                  <div className=\"title\">Stake</div>\n                  <div className=\"subtitleBox\">\n                    <div className=\"subtitle\">Available: <span className=\"green\">{availableLp}</span> BLP </div>\n                    <PercentBox theme={theme} balance={availableLp} onClick={(opNum) => { updateOpNum(opNum, item) }} />\n                  </div>\n                  <Input\n                    className=\"mine-input\"\n                    token='BLP'\n                    value={opNum}\n                    onChange={(opNum) => { updateOpNum(opNum, item) }}\n                    balance={availableLp}\n                    theme={theme}\n                  />\n                  <button className={`btn ${opNum ? '' : 'disable'} `} onClick={() => { handleOp(col, 'stake', opNum) }}>Confirm Stake</button>\n                  <div className='flex'>\n                    <div className=\"title flex2\">My Pool Share <span className=\"bGreen\">{poolShareRate}%</span></div>\n                    <div className=\"title flex1 link tar\">Go to Pool</div>\n                  </div>\n                  <div className=\"yellow tips\">Once rewards end, you must claim within 7 days or they will be forfeited.</div>\n                </div>\n                <div className=\"op-box-cell\">\n                  <div className=\"title\">Withdraw</div>\n                  <div className=\"subtitleBox\">\n                    <div className=\"subtitle\">Available:  <span className=\"green\">{stakeLp}</span> BLP </div>\n                    <PercentBox theme={theme} balance={stakeLp} onClick={(opNum) => { updateOpNum2(opNum, item) }} />\n                  </div>\n                  <Input\n                    className=\"mine-input\"\n                    token='BLP'\n                    value={opNum2}\n                    onChange={(opNum) => { updateOpNum2(opNum, item) }}\n                    balance={stakeLp}\n                    theme={theme}\n                  />\n                  <button className={`btn ${opNum2 ? '' : 'disable'} `} onClick={() => { handleOp(col, 'withdraw', opNum2) }}>Confirm Withdraw & Claim Rewards</button>\n                  <div className=\"title\">My Rewards: {myRewards}</div>\n                  <div className=\"warp\">\n                    <button className={`btn left ${myRewards ? '' : 'disable'} `} onClick={() => { handleOp(col, 'claim') }}>Claim Rewards</button>\n                    <div className='right tac'>\n                      <RedoOutlined className=\"icon\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </td>\n          </tr>\n          : null\n      }\n    </>\n  )\n}\n\nconst PageView = () => {\n  let defaultTheme = getDefaultTheme();\n  const [theme, setTheme] = useState(defaultTheme);\n  const [list, setList] = useState([]);\n  // 资产map\n  const [assetsMap, setAssetsMap] = useState({\n    'btcb': {},\n    'eth': {}\n  });\n  const [supplyMap, setSupplyMap] = useState({});\n  const [apyMap, setApyMap] = useState({});\n\n   // INIT LIST\n   useEffect(() => {\n    const list = Config.FARM_POOL_LIST\n    for(let item of list){\n      item.opVisible = false\n      item.opNum = 0\n      item.opNum2 = 0\n    }\n    setList(list);\n  }, []);\n\n  // INIT\n  useEffect(() => {\n    const lifetimeObj = {};\n\n    mapData({\n      // theme\n      theme(value){\n        setTheme(value)\n      },\n      // available lp\n      swapLpAmtMap(value) {\n        assetsMap['btcb']['SWAPLP'] = value['BTCB']\n        assetsMap['eth']['SWAPLP'] = value['ETH']\n        setAssetsMap(Object.assign({}, assetsMap))\n      },\n      // stake lp\n      stakeLpAmtMap(value) {\n        assetsMap['btcb']['STAKELP'] = value['BTCB']\n        assetsMap['eth']['STAKELP'] = value['ETH']\n        setAssetsMap(Object.assign({}, assetsMap))\n      },\n      // reward\n      rewardMap(value) {\n        assetsMap['btcb']['REWARD'] = value['BTCB']\n        assetsMap['eth']['REWARD'] = value['ETH']\n        setAssetsMap(Object.assign({}, assetsMap))\n      },\n      // supply\n      poolStakedMap(value) {\n        if(value['BTCB']){\n          supplyMap['btcb'] = value['BTCB']\n        }\n        if(value['ETH']){\n          supplyMap['eth'] = value['ETH']\n        }\n        setSupplyMap(Object.assign({}, supplyMap))\n      },\n      // apy\n      lpApyMap(value) {\n        apyMap['btcb'] = value['BTCB']\n        apyMap['eth'] = value['ETH']\n        setApyMap(Object.assign({}, apyMap))\n      }\n    }, ctx, lifetimeObj);\n\n    return () => {\n      unmapActions(lifetimeObj);\n    }\n  }, []);\n\n\n  // methods\n  const changeVisible = (opVisible, item) => {\n    item.opVisible = !opVisible\n    setList([].concat(list))\n  }\n\n  const updateOpNum = (num, item) => {\n    item.opNum = num\n    setList([].concat(list))\n  }\n\n  const updateOpNum2 = (num, item) => {\n    item.opNum2 = num\n    setList([].concat(list))\n  }\n\n  const handleOp = (col, type, num) => {\n    console.log(col, type, num)\n    let valid = checkOpValid(num)\n    if (!valid) {\n      return\n    }\n    if (type === 'stake') {\n      ctx.event.emit('stake', { col, num });\n    }\n    if (type === 'withdraw') {\n      ctx.event.emit('withdraw', { col, num });\n    }\n    if (type === 'claim') {\n      ctx.event.emit('claim', { col });\n    }\n  }\n\n  return (\n    <div className=\"page-center farms\" style={{ justifyContent: 'flex-start' }}>\n      <div className=\"container\">\n        <div className={`box bg-${theme}`}>\n          <div className={`title text-${theme}`}>Liquidity Mining</div>\n          <table className=\"table\">\n            <thead>\n              <tr className=\"farm-pc\">\n                {\n                  FARM_TABLE_HEADER.map((text, i) =>\n                    <th key={i} className={`${text === 'APY' ? 'dotted' : ''}`}>{text}</th>\n                  )\n                }\n              </tr>\n              <tr className=\"farm-table-wap\">\n                <th>\n                  <div className=\"flex\">\n                    <div className=\"flex1 tac\">pool info</div>\n                    <div className=\"flex1 tac\">stake info</div>\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                list.map((item, i) =>\n                  <Row item={item} theme={theme} key={i} apy={apyMap[item.key]} assetsMap={assetsMap[item.key]} supply={supplyMap[item.key]} changeVisible={changeVisible} updateOpNum={updateOpNum} updateOpNum2={updateOpNum2} handleOp={handleOp} />\n                )\n              }\n            </tbody>\n          </table>\n          {\n            list.length ? null :\n              <div className=\"empty\">No pool in Farms!</div>\n          }\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default PageView;\n"],"sourceRoot":""}