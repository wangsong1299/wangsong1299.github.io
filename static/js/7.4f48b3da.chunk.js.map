{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Input.js","components/PercentBox.js","../node_modules/@ant-design/icons/RedoOutlined.js","../node_modules/@ant-design/icons/lib/icons/RedoOutlined.js","../node_modules/@ant-design/icons-svg/lib/asn/RedoOutlined.js","pages/Farms.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ComponentView","props","token","placeholder","balance","onChange","className","placeholderText","type","event","target","onClick","obj","defineProperty","exports","default","_default","require","__esModule","module","_interopRequireDefault","_interopRequireWildcard","React","_RedoOutlined","_AntdIcon","RedoOutlined","ref","createElement","assign","icon","displayName","forwardRef","headerTextList","Row","item","apy","assetsMap","changeVisible","updateOpNum","updateOpNum2","handleOp","col","pool","rewardsText","opVisible","opNum","opNum2","availableLp","stakeLp","totalStaked","myRewards","poolShareRate","Math","round","colSpan","PageView","useState","list","setList","setAssetsMap","apyMap","setApyMap","useEffect","lifetimeObj","mapData","lpAmt","reward","lpTotalSupply","lpApyMap","ctx","unmapActions","concat","num","console","log","checkOpValid","emit","style","justifyContent","map","text","key"],"mappings":"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","file":"static/js/7.4f48b3da.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// bumper\n/**\n * Balance 输入框\n */\n\nimport React from 'react'\n\nimport './Input.scss';\n\nconst ComponentView = (props) => {\n  const {\n    token='',\n    placeholder='',\n    value='',\n    balance=0,\n    onChange=() => {},\n    className=''\n  } = props;\n  const placeholderText = placeholder ? placeholder: `Amount of ${token}`\n  return (\n    <div className={className}>\n      <div className=\"balance-input\">\n        <input\n          type=\"number\"\n          value={value}\n          placeholder={placeholderText}\n          onChange={\n            (event) => onChange(event.target.value)\n          }\n        />\n        <div>\n          <span className=\"max\" onClick={() => onChange(balance)}>Max</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComponentView;\n","// bumper\n/**\n * 百分比框框\n */\n\nimport React from 'react'\n\nimport './PercentBox.scss';\n\nconst ComponentView = (props) => {\n  const {\n    balance=0,\n    onClick = () => { },\n    className = ''\n  } = props;\n  return (\n    <div className={className}>\n      <div className=\"p-box\">\n        <div className=\"p-cell\" onClick={() => { onClick(0.25*balance) }}>25%</div>\n        <div className=\"p-cell\" onClick={() => { onClick(0.5*balance) }}>50%</div>\n        <div className=\"p-cell\" onClick={() => { onClick(0.75*balance) }}>75%</div>\n        <div className=\"p-cell\" onClick={() => { onClick(balance) }}>100%</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComponentView;\n","'use strict';\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  var _RedoOutlined = _interopRequireDefault(require('./lib/icons/RedoOutlined'));\n  \n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n  \n  var _default = _RedoOutlined;\n  exports.default = _default;\n  module.exports = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _RedoOutlined = _interopRequireDefault(require(\"@ant-design/icons-svg/lib/asn/RedoOutlined\"));\n\nvar _AntdIcon = _interopRequireDefault(require(\"../components/AntdIcon\"));\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(_AntdIcon.default, Object.assign({}, props, {\n    ref: ref,\n    icon: _RedoOutlined.default\n  }));\n};\n\nRedoOutlined.displayName = 'RedoOutlined';\n\nvar _default = /*#__PURE__*/React.forwardRef(RedoOutlined);\n\nexports.default = _default;","\"use strict\";\n// This icon file is generated automatically.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexports.default = RedoOutlined;\n","// bumper\nimport { useEffect, useState } from 'react';\nimport ctx, { mapData, unmapActions } from '../events';\nimport Input from '../components/Input';\nimport PercentBox from '../components/PercentBox';\nimport './Farms.scss';\nimport RedoOutlined from '@ant-design/icons/RedoOutlined';\nimport { checkOpValid } from '../utils';\n\nconst headerTextList = [\n  'Pool',\n  'Rewards',\n  'APY',\n  'Total Staked',\n  'My Staked',\n  'My Rewards'\n]\n\nconst Row = (props) => {\n  const { item, apy, assetsMap = {}, changeVisible, updateOpNum, updateOpNum2, handleOp } = props;\n  const { col, pool, rewardsText, opVisible, opNum, opNum2 } = item;\n  const availableLp = assetsMap['LP']\n  const stakeLp = assetsMap['STAKELP']\n  const totalStaked = assetsMap['TOTALLP']\n  const myRewards = assetsMap['REWARD']\n  const poolShareRate = Math.round(stakeLp * 10000 / totalStaked) / 100\n  return (\n    <>\n      <tr className={`farm-pc pointer ${opVisible ? 'trShow' : ''} `} onClick={() => { changeVisible(opVisible, item) }}>\n        <td className=\"td \">{pool}</td>\n        <td className=\"td green\">{rewardsText}</td>\n        <td className=\"td green\">{apy}%</td>\n        <td className=\"td\">{totalStaked}</td>\n        <td className=\"td\">{stakeLp}</td>\n        <td className=\"td\">{myRewards}</td>\n      </tr>\n      <tr className={`farm-wap pointer ${opVisible ? 'trShow' : ''} `} onClick={() => { changeVisible(opVisible, item) }}>\n        <td>\n          <div className=\"flex\">\n            <div className=\"flex1 tac padding5\">\n              {pool}<br />\n              <div className=\"tal fz08\">reward: <span className=\"green\">{rewardsText}</span> </div>\n              <div className=\"tal fz08\">apy: <span className=\"green\">{apy}</span> </div>\n            </div>\n            <div className=\"flex1 tal padding5\">\n              totalLp: {totalStaked}<br />\n            myStaked: <span className=\"green\">{stakeLp}</span> <br />\n            myRewards: <span className=\"green\">{myRewards}</span>\n            </div>\n          </div>\n        </td>\n      </tr>\n      {\n        opVisible ?\n          <tr className=\"trShow\">\n            <td className=\"farm-table-pc\" colSpan=\"6\">\n              <div className='op-box'>\n                <div className=\"op-box-cell op-box-shadow\">\n                  <div className=\"title\">Stake</div>\n                  <div className=\"subtitleBox\">\n                    <div className=\"subtitle\">Available: <span className=\"green\">{availableLp}</span> SLP </div>\n                    <PercentBox balance={availableLp} onClick={(opNum) => { updateOpNum(opNum, item) }} />\n                  </div>\n                  <Input\n                    className=\"mine-input\"\n                    token='SLP'\n                    value={opNum}\n                    onChange={(opNum) => { updateOpNum(opNum, item) }}\n                    balance={availableLp}\n                  />\n                  <button className={`btn ${opNum ? '' : 'disable'} `} onClick={() => { handleOp(col, 'stake', opNum) }}>Confirm Stake</button>\n                  <div className='flex'>\n                    <div className=\"title flex2\">My Pool Share <span className=\"bGreen\">{poolShareRate}%</span></div>\n                    <div className=\"title flex1 link tar\">Go to Pool</div>\n                  </div>\n                  <div className=\"bYellow tips\">Once rewards end, you must claim within 7 days or they will be forfeited.</div>\n                </div>\n                <div className=\"op-box-cell\">\n                  <div className=\"title\">Withdraw</div>\n                  <div className=\"subtitleBox\">\n                    <div className=\"subtitle\">Available:  <span className=\"green\">{stakeLp}</span> SLP </div>\n                    <PercentBox balance={stakeLp} onClick={(opNum) => { updateOpNum2(opNum, item) }} />\n                  </div>\n                  <Input\n                    className=\"mine-input\"\n                    token='SLP'\n                    value={opNum2}\n                    onChange={(opNum) => { updateOpNum2(opNum, item) }}\n                    balance={stakeLp}\n                  />\n                  <button className={`btn ${opNum2 ? '' : 'disable'} `} onClick={() => { handleOp(col, 'withdraw', opNum2) }}>Confirm Withdraw & Claim Rewards</button>\n                  <div className=\"title\">My Rewards: {myRewards}</div>\n                  <div className=\"warp\">\n                    <button className={`btn left ${myRewards ? '' : 'disable'} `} onClick={() => { handleOp(col, 'claim') }}>Claim Rewards</button>\n                    <div className='right tac'>\n                      <RedoOutlined className=\"icon\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </td>\n            <td className=\"farm-wap\" colSpan=\"2\">\n              <div className='op-box'>\n                <div className=\"op-box-cell op-box-shadow\">\n                  <div className=\"title\">Stake</div>\n                  <div className=\"subtitleBox\">\n                    <div className=\"subtitle\">Available: <span className=\"green\">{availableLp}</span> SLP </div>\n                    <PercentBox balance={availableLp} onClick={(opNum) => { updateOpNum(opNum, item) }} />\n                  </div>\n                  <Input\n                    className=\"mine-input\"\n                    token='SLP'\n                    value={opNum}\n                    onChange={(opNum) => { updateOpNum(opNum, item) }}\n                    balance={availableLp}\n                  />\n                  <button className={`btn ${opNum ? '' : 'disable'} `} onClick={() => { handleOp(col, 'stake', opNum) }}>Confirm Stake</button>\n                  <div className='flex'>\n                    <div className=\"title flex2\">My Pool Share <span className=\"bGreen\">{poolShareRate}%</span></div>\n                    <div className=\"title flex1 link tar\">Go to Pool</div>\n                  </div>\n                  <div className=\"bYellow tips\">Once rewards end, you must claim within 7 days or they will be forfeited.</div>\n                </div>\n                <div className=\"op-box-cell\">\n                  <div className=\"title\">Withdraw</div>\n                  <div className=\"subtitleBox\">\n                    <div className=\"subtitle\">Available:  <span className=\"green\">{stakeLp}</span> SLP </div>\n                    <PercentBox balance={stakeLp} onClick={(opNum) => { updateOpNum2(opNum, item) }} />\n                  </div>\n                  <Input\n                    className=\"mine-input\"\n                    token='SLP'\n                    value={opNum2}\n                    onChange={(opNum) => { updateOpNum2(opNum, item) }}\n                    balance={stakeLp}\n                  />\n                  <button className={`btn ${opNum2 ? '' : 'disable'} `} onClick={() => { handleOp(col, 'withdraw', opNum2) }}>Confirm Withdraw & Claim Rewards</button>\n                  <div className=\"title\">My Rewards: {myRewards}</div>\n                  <div className=\"warp\">\n                    <button className={`btn left ${myRewards ? '' : 'disable'} `} onClick={() => { handleOp(col, 'claim') }}>Claim Rewards</button>\n                    <div className='right tac'>\n                      <RedoOutlined className=\"icon\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </td>\n          </tr>\n          : null\n      }\n    </>\n  )\n}\n\nconst PageView = () => {\n  const [list, setList] = useState([]);\n  // 资产map\n  const [assetsMap, setAssetsMap] = useState({\n    'btcb': {},\n    'eth': {}\n  });\n  const [apyMap, setApyMap] = useState({});\n\n  // INIT\n  useEffect(() => {\n    const lifetimeObj = {};\n\n    mapData({\n      lpAmt(value) {\n        assetsMap['btcb']['LP'] = value['BTCB']\n        assetsMap['eth']['LP'] = value['ETH']\n        setAssetsMap(assetsMap)\n      },\n      stakeLp(value) {\n        assetsMap['btcb']['STAKELP'] = value['BTCB']\n        assetsMap['eth']['STAKELP'] = value['ETH']\n        setAssetsMap(assetsMap)\n      },\n      reward(value) {\n        assetsMap['btcb']['REWARD'] = value['BTCB']\n        assetsMap['eth']['REWARD'] = value['ETH']\n        setAssetsMap(assetsMap)\n      },\n      lpTotalSupply(value) {\n        assetsMap['btcb']['TOTALLP'] = value['BTCB']\n        assetsMap['eth']['TOTALLP'] = value['ETH']\n        setAssetsMap(assetsMap)\n      },\n      lpApyMap(value) {\n        apyMap['btcb'] = value['BTCB']\n        apyMap['eth'] = value['ETH']\n        setApyMap(Object.assign({}, apyMap))\n      }\n    }, ctx, lifetimeObj);\n\n    const list2 = [{\n      'key': 'btcb',\n      'col': 'BTCB',\n      'pool': 'WBNB - BC_BTCB_1_WBNB_2021_12_31',\n      'rewardsText': '3000.00 BUMPER/week',\n      opVisible: false,\n      opNum: 0,\n      opNum2: 0\n    },{\n      'key': 'eth',\n      'col': 'ETH',\n      'pool': 'WBNB - ETH_0.01_WBNB_20210510',\n      'rewardsText': '700 BUMPER/week',\n      opVisible: false,\n      opNum: 0,\n      opNum2: 0\n    }]\n    setList(list2);\n\n\n    return () => {\n      unmapActions(lifetimeObj);\n    }\n  }, [assetsMap]);\n\n\n  // methods\n  const changeVisible = (opVisible, item) => {\n    item.opVisible = !opVisible\n    setList([].concat(list))\n  }\n\n  const updateOpNum = (num, item) => {\n    item.opNum = num\n    setList([].concat(list))\n  }\n\n  const updateOpNum2 = (num, item) => {\n    item.opNum2 = num\n    setList([].concat(list))\n  }\n\n  const handleOp = (col, type, num) => {\n    console.log(col, type, num)\n    let valid = checkOpValid(num)\n    if (!valid) {\n      return\n    }\n    if (type === 'stake') {\n      ctx.event.emit('stake', { col, num });\n    }\n    if (type === 'withdraw') {\n      ctx.event.emit('withdraw', { col, num });\n    }\n    if (type === 'claim') {\n      ctx.event.emit('claim', { col });\n    }\n  }\n\n  return (\n    <div className=\"page-center farms\" style={{ justifyContent: 'flex-start' }}>\n      <div className=\"container\">\n        <div className=\"box\">\n          <div className=\"title\">Liquiity Mining</div>\n          <table className=\"table\">\n            <thead>\n              <tr className=\"farm-pc\">\n                {\n                  headerTextList.map((text, i) =>\n                    <th key={i} className={`${text === 'APY' ? 'dotted' : ''}`}>{text}</th>\n                  )\n                }\n              </tr>\n              <tr className=\"farm-wap\">\n                <div className=\"flex\">\n                  <div className=\"flex1 tac\">pool info</div>\n                  <div className=\"flex1 tac\">stake info</div>\n                </div>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                list.map((item, i) =>\n                  <Row item={item} key={i} apy={apyMap[item.key]} assetsMap={assetsMap[item.key]} changeVisible={changeVisible} updateOpNum={updateOpNum} updateOpNum2={updateOpNum2} handleOp={handleOp} />\n                )\n              }\n            </tbody>\n          </table>\n          {\n            list.length ? null :\n              <div className=\"empty\">No pool in Farms!</div>\n          }\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default PageView;\n"],"sourceRoot":""}