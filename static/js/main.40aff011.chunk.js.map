{"version":3,"sources":["components/Modal.js","events/extensions.js","events/lib/event.ts","events/lib/Logger.ts","events/lib/process.ts","events/lib/watcher.ts","events/lib/helper.ts","events/index.js","events/lib/index.ts","config.js","events/contracts/constants.js","utils/number.js","events/contracts/transaction.js","events/contracts/farmTransaction.js","events/contracts/history.js","events/contracts/accounts.js","events/pageDelegate.js","Routes.js","reportWebVitals.js","index.js"],"names":["showConfirm","options","title","content","onOk","Modal","confirm","icon","onCancel","console","log","getContainer","document","getElementById","showInfo","Event","_eventMap","_id","this","Map","name","callback","ctx","createEvent","once","events","get","_removeEventByFn","delete","args","forEach","event","id","apply","_removeEventById","eventId","push","set","i","length","splice","callNative","bool","message","error","level","Process","_options","processors","_processArgsQueue","key","handler","debug","Logger","info","task","pop","invoke","processor","Watcher","watchers","__notifyTimes","call","data","handlerId","watcher","unWatch","_unWatchAll","noticeHandler","_unWatch","clear","undefined","handlerObj","mapData","keys","ctxBind","_$unmapFns","Array","isArray","watch","val","Object","unmapActions","unmapFn","ranta","_extensionData","_watchers","process","query","init","_initOptions","_initWatchData","_initProxyData","page","extensions","reduce","current","values","Proxy","target","propKey","value","receiver","oldValue","notify","Reflect","warn","web3","chainProvider","chainAccount","chainBalance","showLoading","loadingMessage","GofContract","GofPoolContract","BumperZapContract","BTokenContract","LpContract","stakeStatus","claimStatus","withdrawStatus","ANOPrice","ANOTotalStake","approveStatus","BtcbAmt","WbnbAmt","brAmt","bcAmt","BumperAmt","lpAmt","stakeLp","reward","reservePaired","ANOBalance","ANOStaked","ANOEarned","ANOProfit","ANOtotalSupply","approveWbnbStatus","pool1APY","ANOUSDTBalance","ANOUSDTEarned","ANOUSDTTotalStake","ANOUSDTtotalSupply","ANOUSDTstakeStatus","LPpool1APY","promoteAvailable","promotePaddress","promoteBlocked","promotePidStatus","recommenderTemp","getCtx","Config","BaseApi","whitepaperLink","githubLink","twitterLink","mediumLink","telegramLink","docLink","suchiSwapPairUrl","CONTRACT_ADDRESS","ETH_NETWORK","1","2","3","4","42","convertByEth","window","BigInt","Math","pow","eth","expiry","floor","Date","getTime","mintRatio","BTCB","WBNB","BumperCore","BumperZap","SwapRouter","BCTOKEN","BRTOKEN","getErc20Json","a","fetch","result","json","getBumperCoreJson","getBumperZapJson","getBTokenJson","getBumperFarmJson","getRouterJson","getLpJson","initContract","TruffleContract","erc20","Erc20Contract","setProvider","bTokenJSON","BumperCoreJSON","BumperCoreContract","BumperZapJSON","BumperFarmJSON","BumperFarmContract","routerJSON","SwapRouterContract","lpJson","approveCol","amount","contractAddress","colAddress","at","colIns","approve","from","res","approvePaired","pairedAddress","pairedIns","depositAndSwapToPaired","num","zapInstance","params","emit","lend","swapInstance","swapExactTokensForTokens","deposit","coreInstance","mmDeposit","repay","redeem","LP","BumperFarm","approveLP","BUMPER","lpIns","stake","farmIns","withdraw","claim","claimRewardsForPools","request","require","getHistoryTx","account","err","body","initChain","then","m","default","detectEthereumProvider","provider","ethereum","method","network","Web3","location","href","updateAccount","listen","code","token","approveBtcbInZapStatus","receipt","status","approveWbnbInSwapStatus","approveBtcbInCoreStatus","Header","React","lazy","Footer","Markets","History","Farms","Xbumper","Home","Mine","Loading","App","useEffect","className","exact","path","Empty","RoutePage","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Routes"],"mappings":"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","file":"static/js/main.40aff011.chunk.js","sourcesContent":["import Modal from 'antd/lib/modal';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\n\nexport const showConfirm = (options = {}) => {\n  const {\n    title = '',\n    content = '',\n    onOk = () => {}\n  } = options;\n\n  Modal.confirm({\n    title,\n    icon: <ExclamationCircleOutlined />,\n    content,\n    onOk,\n    onCancel() {\n      console.log('Cancel');\n    },\n    getContainer: document.getElementById('modal')\n  });\n}\n\nexport const showInfo = (options = {}) => {\n  const {\n    title = '',\n    content = ''\n  } = options;\n\n  Modal.confirm({\n    title,\n    icon: <ExclamationCircleOutlined />,\n    content,\n    getContainer: document.getElementById('modal')\n  });\n}\n","import ctx from \"./index\";\n\nexport default [\n  {\n    name: 'default',\n    data: {\n      // web3连接器\n      web3: 1,\n      // eth连接器\n      chainProvider: 1,\n      // 用户账户\n      chainAccount: 1,\n      // 账户余额\n      chainBalance: 1,\n      // 是否loading\n      showLoading: 1,\n      // loading展示文案\n      loadingMessage: 1\n    }\n  },\n  {\n    name: 'contract',\n    data: {\n      // 合约\n      GofContract: 1,\n      // 质押合约\n      GofPoolContract: 1,\n      // zap合约\n      BumperZapContract: 1,\n      // btoken合约\n      BTokenContract: 1,\n      LpContract: 1,\n      // 质押状态\n      stakeStatus: 1,\n      claimStatus: 1,\n      // 提现状态\n      withdrawStatus: 1,\n      // 合约价格\n      ANOPrice: 1,\n      // 全部质押数\n      ANOTotalStake: 1,\n      approveStatus: 1,\n    }\n  },\n  {\n    name: 'assets',\n    data: {\n      BtcbAmt: 1,\n      WbnbAmt: 1,\n      brAmt: 1,\n      bcAmt: 1,\n      BumperAmt: 1,\n      lpAmt:1,\n      stakeLp: 1, \n      reward: 1,\n      reservePaired: 0,\n      // ANO余额\n      ANOBalance: 1,\n      // ANO可取消质押数量\n      ANOStaked: 1,\n      // ANO挖矿收益\n      ANOEarned: 1,\n      // 收益率\n      ANOProfit: 1,\n      //总质押量\n      ANOtotalSupply: 1,\n      //是否授权\n      stakeStatus: 1,\n      approveStatus: 1,\n      approveWbnbStatus: 1,\n      //年化收益APY\n      pool1APY: 0,\n    }\n  },\n  {\n    name: 'LPMine',\n    data: {\n      ANOUSDTBalance: 1,\n      ANOUSDTEarned: 1,\n      ANOUSDTTotalStake: 1,\n      ANOUSDTtotalSupply: 1,\n      ANOUSDTstakeStatus: 1,\n      LPpool1APY: 0,\n    }\n  },\n  {\n    name: 'promote',\n    data: {\n      promoteAvailable: 1,\n      promotePaddress: 1,\n      promoteBlocked: 1,\n      promotePidStatus: 1,\n      recommenderTemp: 1\n    }\n  }\n];\n","import { IContext } from './types';\n\ninterface IEvent {\n  // 事件编号\n  id: number;\n  // 是否只执行一次\n  once: boolean;\n  ctx: IContext;\n  callback: Function;\n}\n\nclass Event {\n  private _eventMap: Map<string, IEvent[]>;\n  private _id: number;\n\n  constructor() {\n    this._eventMap = new Map();\n    this._id = 0;\n  }\n\n  /**\n   * 添加事件监听\n   * @param {string} name 事件名称\n   * @param {function} callback 事件回调\n   * @param {this} ctx 回调函数调用上下文\n   * @returns {function} 取消事件监听函数\n   */\n\n  listen(name: string, callback: Function, ctx?: IContext) {\n    return this.createEvent(\n      {\n        name,\n        callback,\n        once: false,\n      },\n      ctx,\n    );\n  }\n\n  /**\n   * 删除事件监听\n   * @param {string} name 事件名称\n   * @param {function} callback 监听的事件回调引用\n   */\n  remove(name: string, callback?: Function) {\n    if (!callback) {\n      this._eventMap.delete(name);\n    } else {\n      const events = this._eventMap.get(name);\n      if (events) {\n        this._removeEventByFn(events, callback);\n      }\n    }\n  }\n\n  /**\n   * 添加一次性事件监听\n   * @param {string} name 事件名称\n   * @param {function} callback 事件回调\n   * @param {this} ctx 回调函数调用上下文\n   * @returns {function} 取消事件监听函数\n   */\n  once(name: string, callback: Function, ctx?: IContext) {\n    return this.createEvent(\n      {\n        name,\n        callback,\n        once: true,\n      },\n      ctx,\n    );\n  }\n\n  /**\n   * 派发事件\n   *\n   * @param {string} name 事件名称\n   * @param  {any[]} args 其他参数\n   */\n  emit(name: string, ...args: any[]) {\n    const events = this._eventMap.get(name);\n\n    if (!events) {\n      return this;\n    }\n\n    events.forEach((event: IEvent) => {\n      const { id, callback, once, ctx } = event;\n      callback && callback.apply(ctx, args);\n      if (once) {\n        this._removeEventById(events, id);\n      }\n    });\n\n    return this;\n  }\n\n  createEvent(options: { name: string; callback: Function; once?: boolean }, ctx?: IContext) {\n    const { name, callback, once } = options;\n    const events = this._eventMap.get(name) || [];\n    const eventId = ++this._id;\n\n    events.push({\n      id: eventId,\n      once,\n      callback,\n      ctx,\n    } as IEvent);\n\n    this._eventMap.set(name, events);\n\n    // 返回一个函数，可以移除该事件\n    return () => {\n      /* istanbul ignore else */\n      if (events) {\n        this._removeEventById(events, eventId);\n      }\n    };\n  }\n\n  _removeEventById(events: IEvent[], id: number) {\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      if (item.id === id) {\n        events.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  _removeEventByFn(events: IEvent[], callback: Function) {\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      if (item.callback === callback) {\n        events.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\nexport default Event;\n","type ILogLevel = 'info' | 'warn' | 'error';\n\nclass Logger {\n  info(...args: any[]) {\n    this.callNative('info', args);\n  }\n\n  warn(...args: any[]) {\n    this.callNative('warn', args);\n  }\n\n  /* istanbul ignore next */\n  error(...args: any[]) {\n    this.callNative('error', args);\n  }\n\n  /* istanbul ignore next */\n  assert(bool: boolean, message: any) {\n    if (bool) {\n      this.error(message);\n    }\n  }\n\n  callNative(level: ILogLevel, ...args: any[]) {\n    console[level](...args);\n  }\n}\n\nexport default new Logger();\n","import { IInnerOptions, IPureObject } from './types';\nimport Logger from './Logger';\n\ninterface IProcessor {\n  key: string;\n  handler: Function;\n}\n\ninterface IProcessorArgsQueue {\n  [key: string]: { args: any[] }[];\n}\n\nclass Process {\n  private _options: IInnerOptions;\n\n  processors: Map<string, IProcessor>;\n\n  // 未定义process，可以把参数存入任务队列\n  private _processArgsQueue: IProcessorArgsQueue;\n\n  constructor(options: IInnerOptions = {}) {\n    this.processors = new Map();\n    this._options = options;\n    this._processArgsQueue = {};\n  }\n\n  /**\n   * 定义事件\n   * @param {string} key 事件名称\n   * @param {Function} handler 调用事件执行的函数\n   */\n\n  define(key: string, handler: Function) {\n    if (!key || !handler || !handler.apply) {\n      /* istanbul ignore next */\n      if (this._options.debug) {\n        Logger.info(`ranta-adapter: process: 缺少 key 或者 handler`);\n      }\n      return;\n    }\n\n    const processor = this.processors.get(key);\n\n    if (processor) {\n      /* istanbul ignore next */\n      if (this._options.debug) {\n        Logger.info(`ranta-adapter: process: ${key} 已经被定义，请勿重复定义`);\n      }\n      return;\n    }\n\n    this.processors.set(key, {\n      key,\n      handler,\n    });\n\n    /**\n     * 补发未响应的 process invoke\n     */\n    if (this._processArgsQueue[key]) {\n      while (this._processArgsQueue[key].length > 0) {\n        const task = this._processArgsQueue[key].pop();\n        task && this.invoke(key, ...task.args);\n      }\n      delete this._processArgsQueue[key];\n    }\n  }\n\n  /**\n   * 执行事件，获取值\n   * @param {string} key 事件名称\n   * @param  {any[]} args 多个参数\n   */\n  invoke(key: string, ...args: any[]) {\n    const processor = this.processors.get(key);\n\n    if (!processor) {\n      if (!this._processArgsQueue[key]) {\n        this._processArgsQueue[key] = [];\n      }\n      this._processArgsQueue[key].push({ args });\n      return;\n    }\n\n    return processor.handler.apply(null, args);\n  }\n}\n\nexport default Process;\n","import { IContext } from './types';\nimport Logger from './Logger';\n\ntype INotifyTimes = {\n  [key in string | number]: number;\n};\n\ninterface INoticeHandler {\n  id: number;\n  handler: Function;\n}\n\ninterface IWatcher {\n  key: string | number;\n  unWatch: Function;\n  noticeHandler: Map<number, INoticeHandler>;\n}\n\nclass Watcher {\n  watchers: Map<string | number, IWatcher>;\n  private __notifyTimes: INotifyTimes;\n  private _id: number;\n\n  constructor() {\n    this.watchers = new Map();\n    this.__notifyTimes = {};\n    this._id = 0;\n  }\n  /**\n   * @param {string} key 监听字段名\n   * @param {function} callback 监听回调函数\n   * @param {this} context\n   * @returns {function} 取消监听函数\n   */\n\n  watch(key: string | number, callback: Function, ctx: IContext) {\n    if (!key || !callback) {\n      Logger.info('ranta-adapter: watch: 缺少 watch name 或者 回调函数 callback');\n      return;\n    }\n\n    // watch的时候，值已经被设置过\n    if (this.__notifyTimes[key] > 0) {\n      callback.call(ctx, ctx.data[key]);\n    }\n\n    const handlerId = ++this._id;\n\n    // 已经有人watch过了\n    const watcher = this.watchers.get(key) || {\n      key,\n      unWatch: /* istanbul ignore next */ () => {\n        this._unWatchAll(key);\n      },\n      noticeHandler: new Map(),\n    };\n    watcher.noticeHandler.set(handlerId, {\n      id: handlerId,\n      handler: callback,\n    });\n    this.watchers.set(key, watcher);\n    return this._unWatch(key, handlerId);\n  }\n\n  /* istanbul ignore next */\n  unWatch(key: string | number) {\n    this._unWatchAll(key);\n  }\n\n  _unWatch(key: string | number, id: number) {\n    return () => {\n      const watcher = this.watchers.get(key);\n      /* istanbul ignore else */\n      if (watcher) {\n        watcher.noticeHandler.delete(id);\n      }\n    };\n  }\n\n  // 中台化没有改方法\n  /* istanbul ignore next */\n  _unWatchAll(key: string | number) {\n    const watcher = this.watchers.get(key);\n    if (watcher) {\n      watcher.noticeHandler.clear();\n      watcher.unWatch = () => {};\n      this.watchers.set(key, watcher);\n    }\n    this.watchers.delete(key);\n  }\n\n  notify(key: string | number, args: any[], ctx: IContext) {\n    // 标记数据已被执行次数\n    if (this.__notifyTimes[key] === undefined) {\n      this.__notifyTimes[key] = 1;\n    } else {\n      this.__notifyTimes[key] += 1;\n    }\n    const watcher = this.watchers.get(key);\n    if (!watcher) {\n      return;\n    }\n    watcher.noticeHandler.forEach((handlerObj) => {\n      const { handler } = handlerObj;\n      handler.apply(ctx, args);\n    });\n  }\n}\n\nexport default Watcher;\n","/* eslint-disable @typescript-eslint/no-redeclare */\n/**\n * 辅助语法糖方法\n * 帮助减小包体积\n */\n\nimport { IContext } from './types';\n\ninterface IDefConfig {\n  [key: string]: Function;\n}\n\ninterface IProcessHelperConfig {\n  interrupt?: boolean;\n}\n\n/**\n * @function mapData\n * @description 减写中台化ctx.watch([key], callback)\n * @param keys\n * @param ctx 执行对象\n * @param ctxBind 映射对象，挂载注销方法\n * @example\n * mapData(['a'], ctx, ctxBind) =>\n * ctx.watch('a', (val) => { ctxBind.a = val; })\n * mapData({a: fn}, ctx, ctxBind); unmapActions(ctxBind); =>\n * const rm = ctx.watch('a', (val) => { ctxBind.a = fn(val); }); rm();\n */\nexport const mapData = (keys: string[] | IDefConfig, ctx: IContext, ctxBind: any) => {\n  if (!keys) {\n    return [];\n  }\n  if (!ctxBind._$unmapFns) {\n    ctxBind._$unmapFns = [] as Function[];\n  }\n  if (Array.isArray(keys)) {\n    keys.forEach((key) => {\n      // ctxBind为外部上下文\n      ctxBind._$unmapFns.push(\n        ctx.watch(key, (val: any) => {\n          ctxBind[key] = val;\n        }),\n      );\n    });\n  } else {\n    Object.keys(keys).forEach((key) => {\n      ctxBind._$unmapFns.push(\n        ctx.watch(key, (val: any) => {\n          ctxBind[key] = keys[key](val);\n        }),\n      );\n    });\n  }\n  return ctxBind._$unmapFns;\n};\n\n/**\n * @function mapEvent\n * @description 减写中台化ctx.event.listen([key], callback)\n * @param options\n * @param ctx\n * @param ctxBind 映射对象，挂载注销方法\n * @example\n * mapEvent({a: fn}, ctx, ctxBind); unmapActions(ctxBind) =>\n * const rm = ctx.event.listen('a', fn); rm();\n * \n */\nexport const mapEvent = (options: IDefConfig, ctx: IContext, ctxBind: any) => {\n  if (!ctxBind._$unmapFns) {\n    ctxBind._$unmapFns = [] as Function[];\n  }\n  Object.keys(options).forEach((key) => {\n    const fn = options[key];\n    if (fn instanceof Function) {\n      ctx.event.listen(key, fn);\n      ctxBind._$unmapFns.push(\n        () => {\n          ctx.event.remove(key, fn);\n        },\n      );\n    }\n  });\n  return ctxBind._$unmapFns;\n};\n\n/**\n * @function mapProcess\n * @description 减写中台化ctx.event.define([key], callback)\n * @param options\n * @param ctx\n * @param ctxBind 映射对象，挂载注销方法\n * @example\n * mapProcess({a: fn}, ctx, ctxBind); =>\n * ctx.process.define('a', fn);\n * \n */\nexport const mapProcess = (options: IDefConfig, ctx: IContext) => {\n  Object.keys(options).forEach((key) => {\n    const fn = options[key];\n    if (fn instanceof Function) {\n      ctx.process.define(key, fn);\n    }\n  });\n};\n\n/**\n * @function runProcess\n * @description 依次串行执行数组中的process，并使用promise连接\n * @param options\n * @param ctx\n * @param ctxBind 映射对象，挂载注销方法\n * @returns stopFn 中断函数，终止process串执行\n * @example\n * runProcess(['a', 'b'], ctx, stop); =>\n * ctx.process.invoke('a').then((val) => { ctx.process.invoke('b', val); })\n * stop.interrupt = true; // 中断流程\n */\nexport const runProcess = (keys: string[], ctx: IContext, options: IProcessHelperConfig = {}) => {\n  let promise = Promise.resolve();\n  keys.forEach((key: string) => {\n    promise = promise.then((val: any) => {\n      if (options && options.interrupt) {\n        return Promise.reject('process manually interrupted');\n      }\n      const result = ctx.process.invoke(key, val);\n      if (result instanceof Promise) {\n        return result;\n      }\n      return Promise.resolve(result);\n    })\n  });\n  return promise;\n}\n\n/**\n * @function unmapActions\n * @description 减写中台化ctx.watch ctx.event.listen 的垃圾回收\n * @param ctxBind mapData/mapListener所绑定的对象/adapter映射对象\n * @example\n * unmapActions(ctxBind)\n */\nexport const unmapActions = (ctxBind: any) => {\n  if (!ctxBind || !ctxBind._$unmapFns) {\n    return;\n  }\n  while (ctxBind._$unmapFns.length > 0) {\n    const unmapFn = ctxBind._$unmapFns.pop();\n    unmapFn && unmapFn();\n  }\n};\n","import extensions from './extensions';\nimport RantaAdapter from './lib';\n\nconst ranta = new RantaAdapter({\n  debug: true,\n  extensions\n});\n\nexport default ranta.getCtx();\n\nexport * from './lib/helper';\n","import { IContext, IExtension, IPureObject, IOptions, IWatcherIns } from './types';\nimport Event from './event';\nimport Process from './process';\nimport Watcher from './watcher';\nimport Logger from './Logger';\n\ninterface IAdapterOptions {\n  debug?: boolean;\n  extensions: IExtension[];\n}\n\nexport default class RantaAdapter {\n  _options!: IOptions;\n\n  private _extensionData!: IPureObject;\n\n  private _watchers!: IWatcherIns;\n\n  ctx: IContext;\n\n  constructor(options: IAdapterOptions) {\n    // 初始化\n    this.ctx = {\n      data: {},\n      event: new Event(),\n      process: new Process(options),\n      watch() {},\n      query: {},\n    } as IContext;\n    this.init(options);\n  }\n\n  init(options: IAdapterOptions) {\n    // 依据配置补全ctx\n    this._initOptions(options);\n    this._initWatchData();\n    this._initProxyData();\n  }\n\n  getCtx() {\n    return this.ctx;\n  }\n\n  bindCtx(page: IPureObject, query: IPureObject) {\n    // if (!this.ctx && page) {\n    // }\n    this.ctx.query = {\n      ...this.ctx.query,\n      ...query,\n    };\n    page.ctx = this.ctx;\n  }\n\n  _initOptions(options: IAdapterOptions) {\n    // 把多个extension组合起来，生成name为key的对象\n    const extensions = options.extensions.reduce((data: { [x: string]: any }, current: { name: string | number }) => {\n      data[current.name] = current;\n      return data;\n    }, {});\n    this._options = {\n      extensions,\n      debug: options.debug,\n    };\n    this._extensionData = Object.values(extensions).reduce((data, current) => {\n      if (!current.data) {\n        return data;\n      }\n      Object.keys(current.data).forEach((key) => {\n        data[key] = undefined;\n      });\n\n      return data;\n    }, {});\n  }\n\n  _initProxyData() {\n    const { ctx, _watchers: watchers } = this;\n    this.ctx.data = new Proxy(this._extensionData, {\n      set(target, propKey: string | number, value, receiver) {\n        const oldValue = target[propKey];\n        watchers.notify(propKey, [value, oldValue], ctx);\n        return Reflect.set(target, propKey, value, receiver);\n      },\n      get(target, propKey: string | number, receiver) {\n        return Reflect.get(target, propKey, receiver);\n      },\n    });\n  }\n\n  _initWatchData() {\n    const watcher = new Watcher();\n    this._watchers = watcher;\n    this.ctx.watch = (key: string | number, callback: Function) => {\n      if (!(key in this._extensionData)) {\n        /* istanbul ignore next */\n        if (this._options.debug) {\n          Logger.warn(`ranta-adapter: watch-data ${key} not in extensions ...`);\n        }\n        return () => {};\n      }\n      return watcher.watch(key, callback, this.ctx);\n    };\n  }\n}\n\nexport * from './helper';\n","const Config = {\n  BaseApi: '',\n  // 交易币种名称\n  whitepaperLink: 'http://www.anobor.com/',\n  githubLink: '',\n  twitterLink: 'https://twitter.com/Anobor_Anobor',\n  mediumLink: '',\n  telegramLink: 'https://t.me/AnoborFans',\n  docLink: '',\n  suchiSwapPairUrl: 'https://trade.bscswap.com/#/swap',\n  // 合约\n  CONTRACT_ADDRESS: {\n    'BTCB': '0x6ce8dA28E2f864420840cF74474eFf5fD80E65B8',\n    'WBNB': '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n    'BUMPER': '0xCce7696a73f0463BDC6f438bEB2721Be28CAd1Df',\n    'BRTOKEN': '0x51496869b8ca5d2e1f841982afbe9a48145f5e46',\n    'BCTOKEN': '0x8a8dc833563ca757c13e51c284bb7aebc79a21c8',\n    'LP': '0x92b8c83bEEAD3925f10901E5dED741Df243706f0',\n    'BumperCore': '0x5B3c58529393B398FCE090E637c31fCD392d8306',\n    'BumperZap': '0xa2045390EB731d1c9a4010F08B3e6c0c94d396ca',\n    'SwapRouter': '0xd954551853f55deb4ae31407c423e67b1621424a',\n    'BumperFarm': '0x3a75BcC6B2c330B91e478C7AA4e3D0b199d04155',\n  }\n};\n\nexport default Config;\n","\nexport const ETH_NETWORK = {\n  1: 'Ethereum Mainnet',\n  2: 'Morden Testnet (deprecated)',\n  3: 'Ropsten Testnet',\n  4: 'Rinkeby Testnet',\n  42: 'Kovan Testnet'\n};\n","const ETH_TO_WEI = window.BigInt(Math.pow(10, 18));\nconst ANO_TO_WEI = window.BigInt(Math.pow(10, 8));\n\n// 将wei换算成eth单位，除以18\nexport const convertByWei = (wei) => {\n  const bigWei = window.BigInt(wei);\n  // 保留5位小数\n  return window.Number(bigWei * 100000n / ETH_TO_WEI) / 100000;\n};\n// 将eth换算成wei单位，乘以18\nexport const convertByEth = (eth) => {\n  return window.BigInt(eth * Math.pow(10, 18))\n};\n\n\n// before\n\n// 将wei换算成ano单位，除以8\nexport const convertByAnoWei = (wei) => {\n  const bigWei = window.BigInt(wei);\n  // 保留5位小数\n  return window.Number(bigWei * 100000n / ANO_TO_WEI) / 100000;\n};\n\n// 将ano换算成wei单位，乘以8\nexport const convertByAno = (num) => {\n  return window.BigInt(num * Math.pow(10, 8))\n};\n\n// 乘以10\nexport const convertMultipleTen = (num) => {\n  return window.BigInt(num * Math.pow(10,10))\n};\n","import Config from '../../config';\nimport ctx from '../index';\nimport { convertByWei, convertByEth } from '../../utils';\n\n// temp\n// 1640995200\nconst expiry = Math.floor((new Date('2022-01-01')).getTime() / 1000);\n// 1000000000000000000\nconst mintRatio = '1000000000000000000';\n\n// 合约地址\nconst { BTCB, WBNB, BumperCore, BumperZap, SwapRouter, BRTOKEN, BCTOKEN } = Config.CONTRACT_ADDRESS\n\nconst getErc20Json = async () => {\n  const result = await fetch(`${Config.BaseApi}/ERC20.json`);\n  return await result.json();\n};\nconst getBumperCoreJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/BumperCore.json`);\n  return await result.json();\n};\nconst getBumperZapJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/BumperZap.json`);\n  return await result.json();\n};\nconst getBTokenJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/bToken.json`);\n  return await result.json();\n};\nconst getBumperFarmJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/BonusRewards.json`);\n  return await result.json();\n};\nconst getRouterJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/IRouter.json`);\n  return await result.json();\n};\nconst getLpJson = async () => {\n  const result = await fetch(`${Config.BaseApi}/lp.json`);\n  return await result.json();\n};\n\n// 初始化合约\nexport const initContract = async () => {\n  const { chainProvider } = ctx.data;\n  if (!chainProvider) {\n    console.error('chainProvider not inited');\n    return;\n  }\n\n  // 异步加载 @truffle 优化体积\n  // const TruffleContract = await import(\n  //   /* webpackChunkName: 'truffle' */\n  //   '@truffle/contract'\n  // ).then(m => m.default);\n  const TruffleContract = window.TruffleContract;\n\n  // col和paired\n  const erc20 = await getErc20Json();\n  const Erc20Contract = TruffleContract(erc20);\n  Erc20Contract.setProvider(chainProvider);\n  ctx.data.Erc20Contract = Erc20Contract;\n\n  // btoken\n  const bTokenJSON = await getBTokenJson();\n  const BTokenContract = TruffleContract(bTokenJSON);\n  BTokenContract.setProvider(chainProvider);\n  ctx.data.BTokenContract = BTokenContract;\n\n  // bumperCore\n  const BumperCoreJSON = await getBumperCoreJson();\n  const BumperCoreContract = TruffleContract(BumperCoreJSON);\n  BumperCoreContract.setProvider(chainProvider);\n  ctx.data.BumperCoreContract = BumperCoreContract;\n\n  // bumperZap\n  const BumperZapJSON = await getBumperZapJson();\n  const BumperZapContract = TruffleContract(BumperZapJSON);\n  BumperZapContract.setProvider(chainProvider);\n  ctx.data.BumperZapContract = BumperZapContract;\n\n  // bumperFarm\n  const BumperFarmJSON = await getBumperFarmJson();\n  const BumperFarmContract = TruffleContract(BumperFarmJSON);\n  BumperFarmContract.setProvider(chainProvider);\n  ctx.data.BumperFarmContract = BumperFarmContract;\n\n  // swapRouter\n  const routerJSON = await getRouterJson();\n  const SwapRouterContract = TruffleContract(routerJSON);\n  SwapRouterContract.setProvider(chainProvider);\n  ctx.data.SwapRouterContract = SwapRouterContract;\n\n  // lp\n  const lpJson = await getLpJson();\n  const LpContract = TruffleContract(lpJson);\n  LpContract.setProvider(chainProvider);\n  ctx.data.LpContract = LpContract;\n}\n\n// bumper函数\n// 获取btcb的数目\nexport const getBtcbAmount = async (address) => {\n  const { Erc20Contract } = ctx.data;\n  const btcbIns = await Erc20Contract.at(BTCB);\n  let res = await btcbIns.balanceOf(address)\n  let amount = convertByWei(res)\n  console.log('btcb', amount)\n  ctx.data.BtcbAmt = amount\n  return amount\n}\n// 获取wbnb的数目\nexport const getWbnbAmount = async (address) => {\n  const { Erc20Contract } = ctx.data;\n  const btcbIns = await Erc20Contract.at(WBNB);\n  let res = await btcbIns.balanceOf(address)\n  let amount = convertByWei(res)\n  console.log('wbnb', amount)\n  ctx.data.WbnbAmt = amount\n  return amount\n}\n\n// 获取btoken的数目\nexport const getBTokenAmount = async (address) => {\n  const { BTokenContract } = ctx.data;\n  let res, amount;\n  const brIns = await BTokenContract.at(BRTOKEN);\n  res = await brIns.balanceOf(address)\n  amount = convertByWei(res)\n  ctx.data.brAmt = amount\n  const bcIns = await BTokenContract.at(BCTOKEN);\n  res = await bcIns.balanceOf(address)\n  amount = convertByWei(res)\n  ctx.data.bcAmt = amount\n  console.log('brtoken', ctx.data.brAmt, 'bctoken', ctx.data.bcAmt)\n  return\n}\n\n// 查看是否授权，验证给zap和core两个合约的\nexport const isApproveCol = async (colAddress = BTCB) => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const colIns = await Erc20Contract.at(colAddress);\n  let map = {}\n  // 验证1\n  let res = await colIns.allowance(chainAccount, BumperZap);\n  let approveNum = convertByWei(res)\n  if (approveNum > 0) {\n    ctx.data.approveBtcbInZapStatus = true;\n  } else {\n    ctx.data.approveBtcbInZapStatus = false;\n  }\n  map['approveBtcbInZap'] = {\n    num: approveNum\n  }\n  // 验证2\n  res = await colIns.allowance(chainAccount, BumperCore);\n  approveNum = convertByWei(res)\n  if (approveNum > 0) {\n    ctx.data.approveBtcbInCoreStatus = true;\n  } else {\n    ctx.data.approveBtcbInCoreStatus = false;\n  }\n  map['approveBtcbInCore'] = {\n    num: approveNum\n  }\n  console.log('approveBtcb:', 'core', map['approveBtcbInCore'].num, 'zap', map['approveBtcbInZap'].num)\n};\n\nexport const isApprovePaired = async () => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const pairedIns = await Erc20Contract.at(WBNB);\n  let map = {}\n  // 验证1\n  let res = await pairedIns.allowance(chainAccount, BumperCore);\n  let approveNum = convertByWei(res)\n  if (approveNum > 0) {\n    ctx.data.approveWbnbStatus = true;\n  } else {\n    ctx.data.approveWbnbStatus = false;\n  }\n  map['approveWbnbInCore'] = {\n    num: approveNum\n  }\n  // 验证2\n  res = await pairedIns.allowance(chainAccount, SwapRouter);\n  approveNum = convertByWei(res)\n  if (approveNum > 0) {\n    ctx.data.approveWbnbInSwapStatus = true;\n  } else {\n    ctx.data.approveWbnbInSwapStatus = false;\n  }\n  map['approveWbnbInSwap'] = {\n    num: approveNum\n  }\n  console.log('approveWbnb:', 'core', map['approveWbnbInSwap'].num, 'swap', map['approveWbnbInSwap'].num)\n};\n\n// 授权col\nexport const approveCol = async (amount, contractAddress, colAddress = BTCB) => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const colIns = await Erc20Contract.at(colAddress);\n  // 授权\n  try {\n    let res = await colIns.approve(\n      contractAddress,\n      convertByEth(amount),\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// 授权paired\nexport const approvePaired = async (amount, contractAddress, pairedAddress = WBNB) => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const pairedIns = await Erc20Contract.at(pairedAddress);\n  // 授权\n  try {\n    let res = await pairedIns.approve(\n      contractAddress,\n      convertByEth(amount),\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const depositAndSwapToPaired = async (num) => {\n  const amount = convertByEth(num)\n  const { BumperZapContract, chainAccount } = ctx.data;\n  const zapInstance = await BumperZapContract.at(BumperZap);\n  try {\n    const params = [\n      BTCB,\n      WBNB,\n      expiry,\n      mintRatio,\n      amount,\n      '0',\n      [BCTOKEN, WBNB], // 根据代码填的\n      expiry // 设置了截止时间为到期时间\n    ]\n    let res = await zapInstance.depositAndSwapToPaired(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n    ctx.event.emit('hideLoading');\n  }\n};\n\nexport const lend = async (num) => {\n  const amount = convertByEth(num)\n  const { SwapRouterContract, chainAccount } = ctx.data;\n  const swapInstance = await SwapRouterContract.at(SwapRouter);\n  try {\n    const params = [\n      amount,\n      0,\n      [WBNB, BCTOKEN],\n      chainAccount,\n      expiry,\n    ]\n    let res = await swapInstance.swapExactTokensForTokens(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n    ctx.event.emit('hideLoading');\n  }\n};\n\nexport const deposit = async (num) => {\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      BTCB,\n      WBNB,\n      expiry,\n      mintRatio,\n      amount,\n    ]\n    let res = await coreInstance.deposit(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n    ctx.event.emit('hideLoading');\n  }\n};\n\nexport const mmDeposit = async (num) => {\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      BTCB,\n      WBNB,\n      expiry,\n      mintRatio,\n      amount,\n    ]\n    let res = await coreInstance.mmDeposit(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// repay, brtoken+wbnb，换回btcb\nexport const repay = async (num) => {\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      BTCB,\n      WBNB,\n      expiry,\n      mintRatio,\n      amount,\n    ]\n    let res = await coreInstance.repay(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// redeem, brtoken+bctoken，换回btcb\nexport const redeem = async (num) => {\n  const amount = convertByEth(num)\n  const { BumperCoreContract, chainAccount } = ctx.data;\n  const coreInstance = await BumperCoreContract.at(BumperCore);\n  try {\n    const params = [\n      BTCB,\n      WBNB,\n      expiry,\n      mintRatio,\n      amount,\n    ]\n    let res = await coreInstance.redeem(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n    ctx.event.emit('hideLoading');\n  }\n};\n\n// before\n\n// //转账HT\n// export const tranferHT = async (account, recommender) => {\n//   const { chainProvider, chainAccount } = ctx.data;\n\n//   try {\n//     const txHash = await chainProvider.request({\n//       method: 'eth_sendTransaction',\n//       params: [{\n//         from: chainAccount,\n//         to: '0x015BF3bDd57068721a2f6d16E74Fa41f699c979E',\n//         value: '0x11c37937e08000',\n//       }],\n//     }).then(function (result) {\n//       addPid(account, recommender);\n//     })\n//   } catch (err) {\n\n//   }\n\n// };\n","import Config from '../../config';\nimport ctx from '../index';\nimport { convertByWei,convertByEth } from '../../utils';\n\nconst { LP, BumperFarm, BUMPER } = Config.CONTRACT_ADDRESS;\n\n// bumper函数\n// 获取bumper的数目\nexport const getBumperAmount = async (address) => {\n  const { Erc20Contract } = ctx.data;\n  const instance = await Erc20Contract.at(BUMPER);\n  let res = await instance.balanceOf(address)\n  let amount = convertByWei(res)\n  console.log('bumper', amount)\n  ctx.data.BumperAmt = amount\n  return\n}\n\nexport const getLpAmount = async (address) => {\n  const { Erc20Contract } = ctx.data;\n  const instance = await Erc20Contract.at(LP);\n  let res = await instance.balanceOf(address)\n  let amount = convertByWei(res)\n  console.log('lp', amount)\n  ctx.data.lpAmt = amount\n  return\n}\n\nexport const getStakeLpAmount = async (address) => {\n  const { BumperFarmContract } = ctx.data;\n  const instance = await BumperFarmContract.at(BumperFarm);\n  let res = await instance.getUser(LP,address)\n  let stakeLp = res[0][0]\n  let reward = res[1].length ? res[1][0] : '0'\n  ctx.data.stakeLp = convertByWei(stakeLp)\n  ctx.data.reward = convertByWei(reward)\n  console.log('stakeLp', ctx.data.stakeLp, 'reward', ctx.data.reward)\n  return\n}\n\nexport const getLpTotalSupply = async () => {\n  const { Erc20Contract } = ctx.data;\n  const instance = await Erc20Contract.at(LP);\n  let res = await instance.totalSupply()\n  let amount = convertByWei(res)\n  console.log('lp totalSupply', amount)\n  ctx.data.lpTotalSupply = amount\n  return\n}\n\nexport const getLpReserves = async () => {\n  const { LpContract } = ctx.data;\n  const instance = await LpContract.at(LP);\n  let res = await instance.getReserves()\n  // let amount0 = convertByWei(res._reserve0) // _reserve0, bctoken\n  let amount1 = convertByWei(res._reserve1) // _reserve1, wbnb\n  ctx.data.reservePaired = 0.1 * amount1\n  // console.log('lp reserve', amount1, ctx.data.reservePaired)\n  return\n}\n\n// 授权lp\nexport const approveLP = async (amount) => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const lpIns = await Erc20Contract.at(LP);\n  // 授权\n  try {\n    let res = await lpIns.approve(\n      BumperFarm,\n      convertByEth(amount),\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const isApproveLP = async () => {\n  const { Erc20Contract, chainAccount } = ctx.data;\n  const lpIns = await Erc20Contract.at(LP);\n  const res = await lpIns.allowance(chainAccount, BumperFarm);\n  let approveNum = convertByWei(res)\n  console.log(approveNum, 'approveLpNum')\n  if (approveNum > 0) {\n    ctx.data.stakeStatus = true;\n  } else {\n    ctx.data.stakeStatus = false;\n  }\n};\n\n// stake\nexport const stake = async (num) => {\n  const amount = convertByEth(num)\n  const { BumperFarmContract, chainAccount } = ctx.data;\n  const farmIns = await BumperFarmContract.at(BumperFarm)\n  try {\n    const params = [\n      LP,\n      amount,\n    ]\n    let res = await farmIns.deposit(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n  }\n}\n\n// withdraw\nexport const withdraw = async (num) => {\n  const amount = convertByEth(num)\n  const { BumperFarmContract, chainAccount } = ctx.data;\n  const farmIns = await BumperFarmContract.at(BumperFarm)\n  try {\n    const params = [\n      LP,\n      amount,\n    ]\n    let res = await farmIns.withdraw(\n      ...params,\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n  }\n}\n\n// claim\nexport const claim = async () => {\n  const { BumperFarmContract, chainAccount } = ctx.data;\n  const farmIns = await BumperFarmContract.at(BumperFarm)\n  try {\n    let res = await farmIns.claimRewardsForPools(\n      [LP],\n      {\n        from: chainAccount\n      }\n    );\n    return res;\n  } catch (err) {\n    //alert(err.message);\n  }\n}","var request = require('request');\n\nexport const getHistoryTx = async (account) => {\n    if (account && account.length) {\n        request('https://testnet.bscscan.com/api?module=account&action=tokentx&address=' + account + '&startblock=0&endblock=10000000&page=1&offset=100&sort=asc&apikey=YourApiKeyToken', function(err, res, body){\n            console.log(err, res, body)\n        })\n    }\n}","// import detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { ETH_NETWORK } from './constants';\nimport ctx from '../index';\nimport { showConfirm } from '../../components/Modal';\nimport { getBtcbAmount, getWbnbAmount, getBTokenAmount, isApproveCol, isApprovePaired } from './transaction';\nimport { getBumperAmount, getLpAmount, getStakeLpAmount, getLpTotalSupply, isApproveLP, getLpReserves } from './farmTransaction';\nimport { getHistoryTx } from './history';\n\n// 初始化metamask，初始化链上数据\nexport const initChain = async () => {\n  // 异步加载 @metamask 优化体积\n  const detectEthereumProvider = await import(\n    /* webpackChunkName: 'metamask' */\n    '@metamask/detect-provider'\n  ).then(m => m.default);\n  // Detect the MetaMask Ethereum provider\n  // this returns the provider, or null if it wasn't detected\n  const provider = await detectEthereumProvider();\n  if (provider) {\n    if (provider === window.ethereum) {\n      ctx.data.chainProvider = provider;\n      const network = await provider.request({\n        method: 'net_version',\n        params: [],\n      });\n      console.log('current network is:', ETH_NETWORK[network]);\n      // 注册web3 provider\n      ctx.data.web3 = new Web3(provider);\n    } else {\n      showConfirm({\n        title: 'Please only use MetaMask!',\n        content: 'Do you have multiple wallets installed?',\n        onOk() {\n          window.location.href = 'https://metamask.io/download.html';\n        }\n      });\n    }\n  } else {\n    // ctx.data.web3 = new Web3.providers.HttpProvider(\"http://localhost:8545\");\n    showConfirm({\n      title: 'Please install MetaMask!',\n      content: 'You have not install MetaMask, jump link to install?',\n      onOk() {\n        window.location.href = 'https://metamask.io/download.html';\n      }\n    });\n  }\n};\n\n// 更新账号信息\nexport const updateAccount = async (account) => {\n  console.log('updateAccount ......');\n  if (account && account.length) {\n    const chainAccount = account[0];\n    ctx.data.chainAccount = chainAccount;\n    // await getBtcbAmount(chainAccount);\n    // await getWbnbAmount(chainAccount);\n    // await getBTokenAmount(chainAccount);\n    // await getBumperAmount(chainAccount); // 获取bumper的数目\n    // await getLpAmount(chainAccount); // 获取lp的数目，单个\n    // await getStakeLpAmount(chainAccount);\n    // getLpTotalSupply();// 获取lp totalSupply\n    // await isApproveCol(); // 是否授权了btcb\n    // await isApprovePaired(); // 是否授权了wbnb\n    // await isApproveLP(); // 是否授权了lp\n    // await getLpReserves(); \n    // api\n    await getHistoryTx(chainAccount);\n  }\n}\n","/**\n * 页面事件代理\n */\n\nimport Config from '../config';\nimport ctx from './index';\nimport { initChain, updateAccount } from './contracts/accounts';\nimport { initContract, approveCol, depositAndSwapToPaired, lend, approvePaired, repay, deposit, mmDeposit, redeem } from './contracts/transaction';\nimport { approveLP, stake, withdraw, claim } from './contracts/farmTransaction';\nimport { setAsyncData } from '../utils/cache';\n// 合约地址\nconst { BumperCore, BumperZap, SwapRouter } = Config.CONTRACT_ADDRESS\n\nctx.event.listen('showLoading', (message) => {\n  ctx.data.showLoading = true;\n  ctx.data.loadingMessage = message;\n});\n\nctx.event.listen('hideLoading', (message) => {\n  ctx.data.showLoading = false;\n  ctx.data.loadingMessage = '';\n});\n\n// 初始化并连接账户\nctx.event.listen('initEthereum', async () => {\n  await initChain(); // 选择网络\n  await initContract(); // 选择合约\n  const { chainProvider } = ctx.data;\n  if (chainProvider) {\n    const account = await chainProvider.request({ method: 'eth_accounts' });\n    console.log(account, 'account')\n    await updateAccount(account);\n  }\n});\n\n// bumper\nctx.event.listen('connectWallet', async () => {\n  const { chainProvider } = ctx.data;\n  if (chainProvider) {\n    let account = '';\n    try {\n      account = await chainProvider.request({ method: 'eth_requestAccounts' });\n      await updateAccount(account);\n    } catch (err) {\n      if (err.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        // If this happens, the user rejected the connection request.\n        console.log('Please connect to MetaMask.');\n      } else {\n        console.error(err);\n      }\n    }\n  }\n});\n\n// borrow\nctx.event.listen('depositAndSwapToPaired', async (params) => {\n  const { num, token } = params;\n  // 先approve\n  if (ctx.data.approveBtcbInZapStatus !== true) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approveCol(num, BumperZap);\n    ctx.data.approveBtcbInZapStatus = true;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n    ctx.event.emit('hideLoading');\n  } else {\n    ctx.event.emit('showLoading', 'DEPOSITING');\n    const result = await depositAndSwapToPaired(num)\n    console.log('depositAndSwapToPaired', result)\n    ctx.event.emit('hideLoading');\n  }\n})\n\n// lend\nctx.event.listen('lend', async (params) => {\n  const { num } = params;\n  // 先approve\n  if (ctx.data.approveWbnbInSwapStatus !== true) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approvePaired(num, SwapRouter);\n    ctx.data.approveWbnbInSwapStatus = true;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n    ctx.event.emit('hideLoading');\n  } else {\n    ctx.event.emit('showLoading', 'LENDING');\n    const result = await lend(num)\n    console.log('lend', 'result')\n    ctx.event.emit('hideLoading');\n  }\n})\n\n// deposit\nctx.event.listen('deposit', async (params) => {\n  const { num, token } = params;\n  // 先approve\n  if (ctx.data.approveBtcbInCoreStatus !== true) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approveCol(num, BumperCore);\n    ctx.data.approveBtcbInCoreStatus = true;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n    ctx.event.emit('hideLoading');\n  } else {\n    ctx.event.emit('showLoading', 'DEPOSITING');\n    const result = await deposit(num)\n    console.log('deposit', result)\n    ctx.event.emit('hideLoading');\n  }\n})\n\nctx.event.listen('mmDeposit', async (params) => {\n  const { num, token } = params;\n  // 先approve\n  if (ctx.data.approveWbnbStatus !== true) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approvePaired(num, BumperCore);\n    ctx.data.approveWbnbStatus = true;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n    ctx.event.emit('hideLoading');\n  } else {\n    ctx.event.emit('showLoading', 'DEPOSITING');\n    const result = await mmDeposit(num)\n    console.log('mmDeposit', result)\n    ctx.event.emit('hideLoading');\n  }\n})\n\n\nctx.event.listen('repay', async (params) => {\n  const { num, token } = params;\n  // 先approve\n  if (ctx.data.approveWbnbStatus !== true) {\n    ctx.event.emit('showLoading', 'APPROVING');\n    const result = await approvePaired(num, BumperCore);\n    ctx.data.approveWbnbStatus = true;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n    ctx.event.emit('hideLoading');\n  } else {\n    ctx.event.emit('showLoading', 'REPAYING');\n    const result = await repay(num)\n    console.log('repay', result)\n    ctx.event.emit('hideLoading');\n  }\n})\n\nctx.event.listen('redeem', async (params) => {\n  const { num, token } = params;\n  ctx.event.emit('showLoading', 'DEPOSITING');\n  const result = await redeem(num)\n  console.log('redeem', result)\n  ctx.event.emit('hideLoading');\n})\n\n// farm 操作\nctx.event.listen('stake', async (params) => {\n  const { num } = params;\n  // 先approve\n  if (ctx.data.stakeStatus !== true) {\n    ctx.event.emit('showLoading', 'APPROVING ON STAKING');\n    const result = await approveLP(num);\n    ctx.data.stakeStatus = true;\n    if (!(result && result.receipt.status)) {\n      return;\n    }\n    ctx.event.emit('hideLoading');\n  } else {\n    ctx.event.emit('showLoading', 'STAKEING');\n    const result = await stake(num)\n    console.log('stake', result)\n    ctx.event.emit('hideLoading');\n  }\n});\n\nctx.event.listen('withdraw', async (params) => {\n  const { num } = params;\n  ctx.event.emit('showLoading', 'WITHDRAWING');\n  const result = await withdraw(num)\n  console.log('withdraw', result)\n  ctx.event.emit('hideLoading');\n});\n\nctx.event.listen('claim', async (params) => {\n  const { num } = params;\n  ctx.event.emit('showLoading', 'CLAIMING');\n  const result = await claim(num)\n  console.log('claim', result)\n  ctx.event.emit('hideLoading');\n});\n","import React, { useEffect, Suspense } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport ctx from './events';\nimport './events/ethereum';\n\nconst Header = React.lazy(() => import('./components/Header'));\nconst Footer = React.lazy(() => import('./components/Footer'));\n\nconst Markets = React.lazy(() => import('./pages/Markets'));\nconst History = React.lazy(() => import('./pages/History'));\nconst Farms = React.lazy(() => import('./pages/Farms'));\nconst Xbumper = React.lazy(() => import('./pages/Xbumper'));\n\nconst Home = React.lazy(() => import('./pages/Home'));\nconst Mine = React.lazy(() => import('./pages/Mine'));\nconst Loading = React.lazy(() => import('./components/Loading'));\n\nconst App = () => {\n  useEffect(() => {\n    // 初始化区块链库\n    ctx.event.emit('initEthereum');\n  }, []);\n  return (\n    <Router>\n      <Header />\n      <div className=\"page-body\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/markets\">\n            <Markets />\n          </Route>\n          <Route path=\"/history\">\n            <History />\n          </Route>\n          <Route path=\"/farms\">\n            <Farms />\n          </Route>\n          <Route path=\"/xbumper\">\n            <Xbumper />\n          </Route>\n          <Route path=\"/mine/:token\">\n            <Mine />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n      <Loading />\n    </Router>\n  );\n};\n\n\nconst Empty = () => {\n  return (\n    <>\n    </>\n  )\n}\n\nconst renderLoading = () => (<Empty />);\n\nconst renderApp = () => (<App />);\n\nconst RoutePage = () => (\n  <Suspense fallback={ renderLoading() }>\n    { renderApp() }\n  </Suspense>\n);\n\nexport default RoutePage;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Routes />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}